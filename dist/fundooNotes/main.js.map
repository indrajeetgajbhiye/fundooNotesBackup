{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Models/model.model.ts","webpack:///./src/app/app-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-notes/add-notes.component.html","webpack:///./src/app/components/add-notes/add-notes.component.scss","webpack:///./src/app/components/add-notes/add-notes.component.ts","webpack:///./src/app/components/archive/archive.component.html","webpack:///./src/app/components/archive/archive.component.scss","webpack:///./src/app/components/archive/archive.component.ts","webpack:///./src/app/components/card/card.component.html","webpack:///./src/app/components/card/card.component.scss","webpack:///./src/app/components/card/card.component.ts","webpack:///./src/app/components/collaborator-dialog/collaborator-dialog.component.html","webpack:///./src/app/components/collaborator-dialog/collaborator-dialog.component.scss","webpack:///./src/app/components/collaborator-dialog/collaborator-dialog.component.ts","webpack:///./src/app/components/delete-icons/delete-icons.component.html","webpack:///./src/app/components/delete-icons/delete-icons.component.scss","webpack:///./src/app/components/delete-icons/delete-icons.component.ts","webpack:///./src/app/components/display-notes/display-notes.component.html","webpack:///./src/app/components/display-notes/display-notes.component.scss","webpack:///./src/app/components/display-notes/display-notes.component.ts","webpack:///./src/app/components/forgot-password/forgot-password.component.html","webpack:///./src/app/components/forgot-password/forgot-password.component.scss","webpack:///./src/app/components/forgot-password/forgot-password.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/image-dialog/image-dialog.component.html","webpack:///./src/app/components/image-dialog/image-dialog.component.scss","webpack:///./src/app/components/image-dialog/image-dialog.component.ts","webpack:///./src/app/components/label-dialog/label-dialog.component.html","webpack:///./src/app/components/label-dialog/label-dialog.component.scss","webpack:///./src/app/components/label-dialog/label-dialog.component.ts","webpack:///./src/app/components/labels/labels.component.html","webpack:///./src/app/components/labels/labels.component.scss","webpack:///./src/app/components/labels/labels.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/note-dialog/note-dialog.component.html","webpack:///./src/app/components/note-dialog/note-dialog.component.scss","webpack:///./src/app/components/note-dialog/note-dialog.component.ts","webpack:///./src/app/components/note-icons/note-icons.component.html","webpack:///./src/app/components/note-icons/note-icons.component.scss","webpack:///./src/app/components/note-icons/note-icons.component.ts","webpack:///./src/app/components/notes/notes.component.html","webpack:///./src/app/components/notes/notes.component.scss","webpack:///./src/app/components/notes/notes.component.ts","webpack:///./src/app/components/question-answer/question-answer.component.html","webpack:///./src/app/components/question-answer/question-answer.component.scss","webpack:///./src/app/components/question-answer/question-answer.component.ts","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.scss","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/reminder-icon/reminder-icon.component.html","webpack:///./src/app/components/reminder-icon/reminder-icon.component.scss","webpack:///./src/app/components/reminder-icon/reminder-icon.component.ts","webpack:///./src/app/components/reminders/reminders.component.html","webpack:///./src/app/components/reminders/reminders.component.scss","webpack:///./src/app/components/reminders/reminders.component.ts","webpack:///./src/app/components/reset-password/reset-password.component.html","webpack:///./src/app/components/reset-password/reset-password.component.scss","webpack:///./src/app/components/reset-password/reset-password.component.ts","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.scss","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/trash/trash.component.html","webpack:///./src/app/components/trash/trash.component.scss","webpack:///./src/app/components/trash/trash.component.ts","webpack:///./src/app/pipe/search.pipe.ts","webpack:///./src/app/service/data/data.service.ts","webpack:///./src/app/service/http/http.service.ts","webpack:///./src/app/service/note/note.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/guard/guard.guard.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Model {\n    title?: string = \"\"\n    description?: string = \"\"\n    color: string = \"#ffffff\"\n    createdDate: Date\n    modifiedDate: Date\n    id: string\n    imageUrl: string\n    isArchived: boolean = false\n    isDeleted: boolean = false\n    isPined: boolean = false\n    reminder: Array<string> = []\n    noteLabels: Array<Label> = []\n    userId: string\n    labelIdList: any = []\n    noteCheckLists: Array<Checklists> = []\n    questionAndAnswerNotes: [Object]\n    collaborators: any = [];\n}\nexport interface Label {\n    id: string\n    label: string\n    isDeleted: boolean\n    userId: string\n\n}\nexport interface Checklists {\n    createdDate: Date\n    id: string\n    isDeleted: boolean\n    itemName: string\n    modifiedDate: Date\n    notesId: string\n    status: string\n}\n\nexport interface userList {\n    \"firstName\": string\n    \"lastName\": string\n    \"email\": string\n    \"userId\": string\n}\n","import { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatFormFieldModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n  ]\n\n})\nexport class AppMaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { HomeComponent } from './components/home/home.component'\nimport { NotesComponent } from './components/notes/notes.component'\nimport { NoteDialogComponent } from './components/note-dialog/note-dialog.component'\nimport { ArchiveComponent } from './components/archive/archive.component';\nimport { TrashComponent } from './components/trash/trash.component';\nimport { GuardGuard } from '../guard/guard.guard';\nimport { LabelDialogComponent } from './components/label-dialog/label-dialog.component';\nimport { RemindersComponent } from './components/reminders/reminders.component'\nimport { LabelsComponent } from './components/labels/labels.component'\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { ImageDialogComponent } from './components/image-dialog/image-dialog.component';\nimport { CollaboratorDialogComponent } from './components/collaborator-dialog/collaborator-dialog.component';\nimport { QuestionAnswerComponent } from './components/question-answer/question-answer.component';\nconst routes: Routes = [\n  {path: 'login',component: LoginComponent},\n  {path: 'registration',component: RegisterComponent},\n  {path: 'forgot',component: ForgotPasswordComponent},\n  {path: 'resetpassword/:token', component: ResetPasswordComponent},\n  {path: '',component: HomeComponent,canActivate:[GuardGuard],children:[\n      {path:'home',component:NotesComponent},\n      {path:'archive',component:ArchiveComponent},\n      {path:'trash',component:TrashComponent},\n      {path:'reminder',component:RemindersComponent},\n      {path:'label/:labelName',component:LabelsComponent},\n      {path:'questionAnswer/:cardId',component:QuestionAnswerComponent},\n      {path: 'search', component: SearchComponent}\n    ] \n  },\n  {path:'update-note',component:NoteDialogComponent},\n  {path:'update-label',component:LabelDialogComponent},\n  {path:'upload-image',component:ImageDialogComponent},\n  {path:'collabs', component: CollaboratorDialogComponent},\n  {path:'**', redirectTo: 'home'}\n];\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Fundoo';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppMaterialModule } from './app-material.module';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NoteIconsComponent } from './components/note-icons/note-icons.component';\nimport { AddNotesComponent } from './components/add-notes/add-notes.component';\nimport { DisplayNotesComponent } from './components/display-notes/display-notes.component';\nimport { NotesComponent } from './components/notes/notes.component';\nimport { RemindersComponent } from './components/reminders/reminders.component';\nimport { NoteDialogComponent } from './components/note-dialog/note-dialog.component';\nimport { ArchiveComponent } from './components/archive/archive.component';\nimport { TrashComponent } from './components/trash/trash.component';\nimport { SearchPipe } from './pipe/search.pipe';\nimport { DeleteIconsComponent } from './components/delete-icons/delete-icons.component';\nimport { ReminderIconComponent } from './components/reminder-icon/reminder-icon.component';\nimport { LabelDialogComponent } from './components/label-dialog/label-dialog.component';\nimport { LabelsComponent } from './components/labels/labels.component';\nimport { CardComponent } from './components/card/card.component';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\nimport { BarRatingModule } from \"ngx-bar-rating\";\nimport { SearchComponent } from './components/search/search.component';\nimport { ImageDialogComponent } from './components/image-dialog/image-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ClickOutsideModule } from 'ng-click-outside';\nimport { NgxMasonryModule } from 'ngx-masonry';\nimport { CollaboratorDialogComponent } from './components/collaborator-dialog/collaborator-dialog.component';\nimport { QuestionAnswerComponent } from './components/question-answer/question-answer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ForgotPasswordComponent,\n    HomeComponent,\n    NoteIconsComponent,\n    AddNotesComponent,\n    ResetPasswordComponent,\n    DisplayNotesComponent,\n    NotesComponent,\n    RemindersComponent,\n    NoteDialogComponent,\n    ArchiveComponent,\n    TrashComponent,\n    SearchPipe,\n    DeleteIconsComponent,\n    ReminderIconComponent,\n    LabelDialogComponent,\n    LabelsComponent,\n    CardComponent,\n    SearchComponent,\n    ImageDialogComponent,\n    CollaboratorDialogComponent,\n    QuestionAnswerComponent\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    AppMaterialModule,\n    HttpClientModule,\n    BarRatingModule,\n    ImageCropperModule,\n    MatDialogModule,\n    NgxMasonryModule,\n    ClickOutsideModule,\n    FroalaEditorModule.forRoot(), FroalaViewModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div>\\n    <div *ngIf=\\\"flag\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"NotesAddNote\\\">\\n        <mat-card (click)=\\\"flag=!flag\\\" fxFlex=\\\"60\\\" fxFlex.xs='90' class=\\\"matcard\\\" fxLayoutAlign=\\\"space-between start\\\">\\n            <div class=\\\"Border\\\" id=\\\"noteTitle\\\" fxLayout=\\\"column\\\" class=\\\"maincard\\\">Take a note...\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end start\\\" fxFlex.xs=\\\"100\\\">\\n                <mat-icon class=\\\"check\\\" matTooltip=\\\"New List\\\" disabled>check_box</mat-icon>\\n                <mat-icon class=\\\"brush\\\" matTooltip=\\\"New note with drawing\\\">brush</mat-icon>\\n                <mat-icon class=\\\"insert\\\" matTooltip=\\\"New note with image\\\">insert_photo</mat-icon>\\n            </div>\\n        </mat-card>\\n    </div>\\n    <div *ngIf=\\\"!flag\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"NotesAddNote\\\">\\n        <mat-card [style.background]=message fxLayout=\\\"column\\\" class=\\\"matcard\\\" fxFlex=\\\"60\\\" fxFlex.xs='90' [style.backgroundColor]=card.color>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"takenote\\\">\\n                <textarea fxflex=\\\"80\\\" class=\\\"textArea\\\" matTextareaAutosize placeholder=\\\"Title \\\" [formControl]=\\\"noteTitle\\\"></textarea>\\n                <button fxflex=\\\"80\\\" mat-icon-button color=\\\"basic\\\" (click)=\\\"changePin()\\\">\\n                    <div class=\\\"barpin\\\" *ngIf=card.isPined >\\n                        <img src=\\\"../../../assets/images/pin_Off.svg\\\" />\\n                    </div>\\n                    <div class=\\\"barpin\\\" *ngIf=!card.isPined  >\\n                        <img src=\\\"../../../assets/images/pin_On.svg\\\" />\\n                    </div>\\n            </button>\\n            </div>\\n            <div class=\\\"Border\\\" fxLayout=\\\"column\\\" class=\\\"takenote\\\">\\n                <textarea class=\\\"textArea\\\" matTextareaAutosize placeholder=\\\"Take a note.. \\\" [formControl]=\\\"noteContent\\\"></textarea>\\n            </div>\\n            <div *ngIf='show==false'>\\n                <div *ngFor='let list of checklistOpen'>\\n                    <div *ngIf='list.status==\\\"open\\\"'>\\n                        <div fxLayoutAlign='space-between center'>\\n                            <img src='../../../assets/images/empty_box.svg' (click)=\\\"update(list,'close')\\\"><input matInput [(ngModel)]=list.itemName>\\n                            <div (click)='delete(list)'>\\n                                <img src='../../../assets/images/wrong_mark.svg'>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <mat-divider></mat-divider>\\n                <div fxLayout='row'><img src='../../../assets/images/add_mark.svg'><input matInput [(ngModel)]=\\\"list\\\" placeholder=\\\"List Here\\\" (keydown)='enter($event,list)'></div>\\n                <mat-divider></mat-divider>\\n                <div *ngFor='let list of checklistOpen'>\\n                    <div *ngIf='list.status==\\\"close\\\"'>\\n                        <div fxLayoutAlign='space-between center'>\\n                            <img src='../../../assets/images/right_box.svg' class='decorate' (click)=\\\"update(list,'open')\\\"><input matInput style=\\\"text-decoration:line-through;\\\" [(ngModel)]=list.itemName>\\n                            <div (click)='delete(list)'>\\n                                <img src='../../../assets/images/wrong_mark.svg'>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div><br><br>\\n            <div *ngIf='card.reminder.length!=0'>\\n                <mat-chip class=\\\"sample\\\" (mouseenter)=\\\"cancelIcon=true\\\" (mouseleave)=\\\"cancelIcon=false\\\">\\n                    {{card.reminder[0]|date:'medium'}}\\n                    <mat-icon *ngIf=cancelIcon (click)=\\\"removeReminder(card.id)\\\" matChipRemove>cancel</mat-icon>\\n                </mat-chip>\\n            </div>\\n            <div *ngIf='card.noteLabels.length!=0' fxLayoutGap='3%' fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"none center\\\">\\n                <div *ngFor='let item of card.noteLabels'>\\n                    <mat-chip-list>\\n                        <mat-chip class=\\\"sample\\\" (mouseenter)=\\\"remin=true\\\" (mouseleave)=\\\"remin=false\\\">\\n                            {{item.label}}\\n                            <mat-icon *ngIf=cancelIcon (click)=\\\"removeLabelTag(item.id)\\\" matChipRemove>cancel</mat-icon>\\n                        </mat-chip>\\n                    </mat-chip-list>\\n                </div>\\n            </div>\\n            <div fxLayoutGap='3%' fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"none center\\\">\\n                <div *ngFor='let item of card.collaborators'>\\n                    <mat-icon class=\\\"material-icons\\\" (click)=\\\"openCollaborator()\\\" matTooltip={{item.email}}>account_circle\\n                    </mat-icon>\\n                </div>\\n            </div>\\n            <div fxFlex='100'>\\n                <app-note-icons (addNoteEvent)=\\\"addNote()\\\" [card]=card></app-note-icons>\\n            </div>\\n        </mat-card>\\n    </div>\\n</div>\"","module.exports = \".matcard {\\n  margin-top: 20px; }\\n\\n.maincard {\\n  width: 60%;\\n  color: #ada6a6;\\n  border: none;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.addnote {\\n  width: 10px; }\\n\\n.matcard {\\n  margin-top: 30px;\\n  border-radius: 18px;\\n  box-shadow: 1px 1px 1px 1px #888888; }\\n\\n[contentEditable=true]:empty:not(:focus):before {\\n  content: attr(data-text); }\\n\\n.title {\\n  margin-bottom: 20px;\\n  color: #555353;\\n  border: none;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.textArea {\\n  background: transparent;\\n  border: none;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.takenote {\\n  margin-bottom: 10px;\\n  color: #ada6a6;\\n  border: none;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.barpin {\\n  border: none;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.mat-icon {\\n  color: #676b6e; }\\n\\n.mat-icon:hover {\\n  color: black; }\\n\\n.sample {\\n  background: transparent; }\\n\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { NoteService } from '../../service/note/note.service';\nimport { Model } from '../../Models/model.model';\nimport { MatDialog } from '@angular/material';\n@Component({\n    selector: 'app-add-notes',\n    templateUrl: './add-notes.component.html',\n    styleUrls: ['./add-notes.component.scss']\n})\nexport class AddNotesComponent implements OnInit {\n    flag = true;\n    flag2 = false;\n    card: any;\n \n    show = true;\n    checklistOpen = [];\n    @Output() newNoteEvent = new EventEmitter();\n    constructor(public dialog: MatDialog, private noteService: NoteService) {\n    }\n    color: string = '#FFFFFF';\n    ngOnInit() {\n        this.card = new Model();\n        // console.log(this.view)\n    }\n    changePin() {\n        this.card.isPined = !this.card.isPined;\n    }\n    noteTitle = new FormControl('', [Validators.required]);\n    noteContent = new FormControl('');\n    addNote() {\n        this.flag = !this.flag;\n        if (this.flag) {\n            if (this.noteTitle.value == '') {\n                this.card.reminder = [];\n                return\n            }\n            else {\n                this.card.title = this.noteTitle.value;\n                this.card.description = this.noteContent.value;\n                this.card.collaborators = JSON.stringify(this.card.collaborators);\n                this.card.collaberators = this.card.collaborators;\n                this.card.noteLabels = JSON.stringify(this.card.noteLabels);\n                this.card.labelIdList = JSON.stringify(this.card.labelIdList);\n                try {\n                    this.noteService.noteServiceEncoded('notes/addNotes',this.card).subscribe(data => {\n                        let note = data;\n                        this.noteTitle.reset();\n                        this.noteContent.reset();\n                        this.card.color = \"#FFFFFF\";\n                        console.log(note['status']['details']);\n                        this.card = new Model();\n                        this.card.reminder=[]\n                        console.log(this.card.reminder)\n                        this.newNoteEvent.emit(note['status']['details']);\n                    })\n                } catch (error) {\n                    console.log(error + \"Error in the note service of add note\");\n                }\n            }\n        }\n    }\n    openCollaborator() {\n        console.log('collabs')\n    }\n    removeReminder() {\n        this.card.reminder = [];\n    }\n}\n","module.exports = \"<div>\\n    <app-display-notes class=\\\"container\\\" [notes]=\\\"cardData\\\"></app-display-notes>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NoteService } from '../../service/note/note.service'\n\n@Component({\n  selector: 'app-archive',\n  templateUrl: './archive.component.html',\n  styleUrls: ['./archive.component.scss']\n})\nexport class ArchiveComponent implements OnInit {\n  cardData: any\n  constructor(private service: NoteService) { }\n\n  ngOnInit() {\n    this.getAllArchiveCard();\n\n  }\n  getAllArchiveCard() {\n    this.service.archiveNotes().subscribe(data => {\n      this.cardData = data[\"data\"][\"data\"];\n      console.log(data);\n      return\n    })\n  }\n}\n","module.exports = \"<mat-card class=\\\"display-note\\\" [style.background]=card.color fxLayout=\\\"column\\\">\\n    <div (click)=\\\"check()\\\" fxLayout=\\\"column\\\">\\n        <div fxFlex=50 class=\\\"Border\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"takenote\\\">\\n            <div fxFlex='100' class=\\\"description\\\">\\n                <textarea fxFlex='100' cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"3\\\" class=\\\"textArea\\\" style=\\\"font-weight: bold;\\\" [(ngModel)]=\\\"card.title\\\">\\n            </textarea>\\n                <!-- #autosize=\\\"cdkTextareaAutosize\\\" -->\\n            </div>\\n            <button *ngIf=!card.isDeleted fxFlex=10 mat-icon-button color=\\\"basic\\\" (click)=\\\"changePin(card)\\\" (click)=\\\"$event.stopPropagation()\\\">\\n                <div class=\\\"barpin\\\" *ngIf=card.isPined>\\n                    <img src=\\\"../../../assets/images/pin_Off.svg\\\" />\\n                </div>\\n                <div class=\\\"barpin\\\" *ngIf=!card.isPined>\\n                    <img src=\\\"../../../assets/images/pin_On.svg\\\" />\\n                </div>\\n            </button>\\n        </div>\\n        <div fxFlex=100 class=\\\"description\\\">\\n            <textarea fxFlex='100' cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"15\\\" class=\\\"textArea\\\" [(ngModel)]=\\\"card.description\\\">\\n            </textarea>\\n        </div>\\n        <div *ngIf='!display'>\\n            <div *ngFor='let list of card.noteCheckLists'>\\n                <div *ngIf='!list.isDeleted'>\\n                    <div fxLayout='column'>{{list.itemName}}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf='display'>\\n            <div *ngFor='let list of card.noteCheckLists'>\\n                <div *ngIf=\\\"list.status=='open' && list.status!='close' && !list.isDeleted\\\" fxLayout='center center'>\\n                    <img src=\\\"../../../assets/images/empty_box.svg\\\" (click)='removeCheckList(list)'>{{list.itemName}}\\n                </div>\\n            </div>\\n            <div *ngFor='let list of card.noteCheckLists'>\\n                <div *ngIf=\\\"list.status=='close' && !list.isDeleted\\\" fxLayout='center center'>\\n                    <img src=\\\"../../../assets/images/right_box.svg\\\" (click)='addCheckList(list)'>\\n                    <del>\\n                            {{list.itemName}}\\n                        </del>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div *ngIf='card.reminder.length>0'>\\n        <mat-chip class=\\\"sample\\\" (mouseenter)=\\\"cancelIcon=true\\\" (mouseleave)=\\\"cancelIcon=false\\\" matTooltip=\\\"reminder\\\">\\n            <div *ngFor=\\\"let reminderItem of card.reminder \\\">\\n                {{reminderItem|date:shortdate}}\\n            </div>\\n            <mat-icon *ngIf=cancelIcon (click)=\\\"removeReminder(card.id)\\\" matChipRemove>cancel</mat-icon>\\n        </mat-chip>\\n    </div>\\n    <div *ngIf='card.noteLabels' fxLayoutGap='3%' fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"none center\\\">\\n        <div *ngFor='let item of card.noteLabels'>\\n            <mat-chip-list>\\n                <mat-chip class=\\\"sample\\\" (click)=\\\"openLabelNotes(item.label)\\\" (mouseenter)=\\\"item.hover=true\\\" (mouseleave)=\\\"item.hover=false\\\" matTooltip=\\\"label\\\">\\n                    {{item.label}}\\n                    <mat-icon *ngIf=item.hover (click)=\\\"removeLabelTag(item.id)\\\" matChipRemove>cancel</mat-icon>\\n                </mat-chip>\\n            </mat-chip-list>\\n        </div>\\n    </div>\\n    <div fxLayoutGap='3%' fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"none center\\\">\\n        <div *ngFor='let item of card.collaborators'>\\n            <mat-icon class=\\\"material-icons\\\" (click)=\\\"openCollaborator()\\\" matTooltip={{item.email}}>account_circle\\n            </mat-icon>\\n        </div>\\n    </div>\\n    <div fxFlex='100' fxLayout=\\\"row\\\">\\n        <app-note-icons class=\\\"iconClass\\\" fxFlex=100 *ngIf=!card.isDeleted (removeEvent)=\\\"removeEvent1($event)\\\" [show]=fullIcon [card]=card>\\n        </app-note-icons>\\n        <app-delete-icons *ngIf=card.isDeleted (removeEvent)=\\\"removeEvent1(true)\\\" [card]=card></app-delete-icons>\\n    </div>\\n    <div *ngIf=\\\"question!=undefined\\\" (click)=\\\"openQandA()\\\">\\n        <mat-divider></mat-divider>\\n        <div [innerHTML]=\\\"question\\\"></div>\\n    </div>\\n</mat-card>\"","module.exports = \".sample {\\n  background: transparent; }\\n\\n.textArea {\\n  background: transparent;\\n  border: none;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  font-family: roboto; }\\n\\n.display-note {\\n  border-radius: 14px; }\\n\\n.mat-icon {\\n  color: #676b6e; }\\n\\n.mat-icon:hover {\\n  color: black; }\\n\\n.display-note .iconClass {\\n  opacity: 0; }\\n\\n.display-note .barpin {\\n  opacity: 0; }\\n\\n.display-note:hover .iconClass {\\n  opacity: 1; }\\n\\n.display-note:hover .barpin {\\n  opacity: 1; }\\n\\n.description textarea {\\n  overflow: hidden; }\\n\\n.descriptionOpen textarea {\\n  overflow: scroll; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { NoteDialogComponent } from '../note-dialog/note-dialog.component';\nimport { NoteService } from '../../service/note/note.service';\nimport { Router } from '@angular/router';\nimport { CollaboratorDialogComponent } from '../collaborator-dialog/collaborator-dialog.component'\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() view;\n  @Input() fullIcon;\n\n  /** \n   * @default {object} card to have default value\n   */\n  @Input()\n  card: any = {};\n\n  @Input() search: boolean = true;\n  @Output() pinEvent = new EventEmitter();\n  @Output() removeEvent = new EventEmitter();\n  searchValue: String;\n  model: any;\n  // card: any = {};\n  isArchived: any;\n  isDeleted: any;\n  isPined: any;\n  description: any;\n  title \n  newList\n  addCheck\n  question\n  display=true;\n  collaborators: any;\n  constructor(public dialog: MatDialog, private router: Router, private noteService: NoteService) { \n    // setTimeout(() => {\n    //   console.log(\"card\", this.card)\n    // }, 0);\n  }\n  ngOnInit() {\n    this.card;\n  }\n  show() {\n    console.log(\"this.card\", this.card);\n    this.description = this.card.description;\n    this.title = this.card.title;\n    this.isArchived = this.card.isArchived;\n    this.isDeleted = this.card.isDeleted;\n    this.isPined = this.card.isPined;\n  }\n  check() {\n    if (!this.fullIcon) {\n      this.openDialog(this.card);\n      this.show();\n    }\n    return;\n  }\n  openDialog(card): void {\n    const dialogRef = this.dialog.open(NoteDialogComponent, {\n      position: { top: '15.5%' },\n      data: card,\n      panelClass: 'myClass1',\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'deleted') {\n        this.removeEvent.emit('true');\n      }\n      else {\n        console.log(card.description + \" = \" + this.description);\n        if (card.title != this.title || card.description != this.description) {\n          this.model = {\n            noteId: card.id,\n            title: card.title,\n            description: card.description\n          }\n          this.noteService.noteServiceEncodedPost('notes/updateNotes',this.model).subscribe(message => {\n\n            console.log(message);\n          })\n        }\n        else if (card.isPined != this.isPined) {\n          this.updatePin(this.card);\n          this.pinEvent.emit(this.card)\n        }\n        else {\n          console.log(\"changes not needed\");\n        }\n      }\n    });\n  }\n  changePin(card) {\n    card.isPined = !card.isPined;\n    if (!this.fullIcon)\n      this.updatePin(card);\n    return\n  }\n\n  updatePin(card) {\n    this.model = {\n      noteIdList: [card.id],\n      isPined: card.isPined\n    }\n    this.noteService.pinUnpinNote(this.model).subscribe(message => {\n      console.log(message);\n      this.removeEvent.emit('pin');\n\n    })\n  }\n  removeReminder(id) {\n    console.log(id);\n    this.noteService.deleteReminder(\n      {\n        \"noteIdList\": [id]\n      })\n      .subscribe(\n        (data) => {\n          console.log('response:', data);\n          this.card.reminder=[]\n        },\n        error => {\n        })\n  }\n  removeLabelTag(labelId) {\n    this.noteService.removeLabelTags(this.card.id, labelId,\n      {\n        \"noteId\": this.card.id,\n        \"lableId\": labelId\n      })\n      .subscribe(data => {\n        console.log(data);\n        this.remove(labelId);\n      })\n  }\n  removeEvent1($event) {\n    this.removeEvent.emit($event)\n  }\n  remove(labelId) {\n    var count = 0;\n    this.card.noteLabels.forEach(label => {\n      if (labelId == label.id) {\n        this.card.noteLabels.splice(count, 1);\n      }\n      else\n        count++;\n    });\n    return;\n\n  }\n  openCollaborator() {\n    const dialogRef = this.dialog.open(CollaboratorDialogComponent,{\n      panelClass : \"myclass\",\n      height : 'auto',\n      width : 'auto',\n      data :{\n        collaborators : this.card.collaborators,\n        id: this.card.id\n      }\n    })\n  }\n  addList() {\n    console.log(\"add list\")\n  }\n  openQandA() {\n    this.router.navigate(['questionAnswer'])\n  }\n  openLabelNotes(labelName) {\n    this.router.navigate(['label', labelName]);\n    this.removeEvent1(false);\n  }\n}\n","module.exports = \"<mat-card>\\n    <div class=\\\"collab\\\" fxFlex=\\\"column\\\">\\n        <span mat-dialog-title fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n            <div>\\n                Collaborators\\n            </div>\\n        </span>\\n        <mat-divider style=\\\"margin-top:-10px\\\"></mat-divider>\\n        <div mat-dialog-content fxLayout=\\\"column\\\" style=\\\"overflow: hidden;\\\">\\n            <span fxLayout=\\\"row\\\">\\n                <button mat-icon-button class=\\\"icon\\\">\\n                    <mat-icon>person_outline</mat-icon>\\n                </button>\\n                <div fxLayout=\\\"column\\\">\\n                    <div class=\\\"usernameStyle\\\">\\n                        {{name}}\\n                        <span style=\\\"font-style: italic\\\">(Owner)</span>\\n        </div>\\n        <div class=\\\"emailStyle\\\">\\n            {{email}}\\n        </div>\\n    </div>\\n\\n    </span>\\n    <div *ngFor=\\\"let array of collaborators\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" style=\\\"position: relative;\\\">\\n            <button fxFlex=10 mat-icon-button class=\\\"icon\\\">\\n                        <mat-icon>person_outline</mat-icon>\\n                    </button>\\n            <div fxFlex=90 fxLayout=\\\"column\\\">\\n                <div class=\\\"usernameStyle\\\">\\n                    {{array.firstName}}\\n                </div>\\n                <div class=\\\"emailStyle\\\">\\n                    {{array.email}}\\n                </div>\\n            </div>\\n            <button fxFlex=10 mat-icon-button class=\\\"btnCollab\\\" (click)=\\\"removeCollaborator(array.userId)\\\">\\n                        <mat-icon>close</mat-icon>\\n                    </button>\\n        </div>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" style=\\\"position: relative;\\\">\\n        <button mat-icon-button class=\\\"icon\\\">\\n                    <mat-icon>person_add</mat-icon>\\n                </button>\\n        <input matInput [(ngModel)]='collaborator' (keyup)='searchlist(collaborator)' class=\\\"emailStyle\\\" placeholder=\\\"Enter the email-id...\\\" [matMenuTriggerFor]='menu'>\\n        <button mat-icon-button class=\\\"btnCollab\\\" (click)=\\\"addCollaborator()\\\">\\n                    <mat-icon>done</mat-icon>\\n                </button>\\n    </div>\\n    <mat-menu #menu='matMenu'>\\n        <div *ngFor='let array of searchResultList'>\\n            <div (click)='setCollaborator(array)'>{{array.email}}</div>\\n        </div>\\n\\n    </mat-menu>\\n    </div>\\n    <div mat-dialog-actions class=\\\"actionDialog\\\" fxLayoutAlign=\\\"space-around center\\\">\\n        <button mat-raised-button class=\\\"actionButton\\\" color=\\\"warn\\\" [mat-dialog-close]>Cancel</button>\\n        <button mat-raised-button class=\\\"actionButton\\\" color=\\\"primary\\\" [mat-dialog-close]>Save</button>\\n    </div>\\n    </div>\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { NoteService } from '../../service/note/note.service';\nimport { Label } from '../../Models/model.model';\n\n@Component({\n  selector: 'app-collaborator-dialog',\n  templateUrl: './collaborator-dialog.component.html',\n  styleUrls: ['./collaborator-dialog.component.scss']\n})\nexport class CollaboratorDialogComponent implements OnInit {\n  name: string;\n  email: string;\n  searchResultList;\n  collaborator;\n  collaborators: any[];\n  collaboratorBody;\n  constructor(public dialogRef: MatDialogRef<CollaboratorDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data, public noteService: NoteService) { }\n\n  ngOnInit() {\n    this.name = localStorage.getItem('firstName');\n    this.email = localStorage.getItem('email');\n    console.log(this.data.collaborators)\n    this.collaborators = this.data.collaborators\n    if (this.data['id'] == undefined) {\n      if (this.data['collaborators'] == undefined) {\n        this.collaborators = [];\n      }\n    }\n  }\n\n  searchlist(data) {\n    if (data != '') {\n      this.noteService.searchUserList(\n        { \"searchWord\": data }).subscribe(data => {\n          console.log(data)\n          this.searchResultList = data['data']['details'];\n        })\n    }\n  }\n  addCollaborator() {\n    try {\n      if (this.email !== this.collaboratorBody.email && this.collaboratorBody.email != '') {\n\n        if (this.data['id'] == undefined) {\n          this.collaborators.push(this.collaboratorBody);\n          this.collaborator = \"\";\n        }\n        else {\n          this.noteService.addCollaborator(this.data['id'], this.collaboratorBody).subscribe(result => {\n            this.collaborators.push(this.collaboratorBody);\n            this.collaborator = \"\";\n            console.log(result)\n          })\n        }\n      }\n    } catch (error) {\n      console.log(error + \"Error during adding collaborator\");\n    }\n  }\n  setCollaborator(userDetails) {\n    console.log(userDetails)\n    if (this.email !== userDetails.email && userDetails.email != '') {\n      this.collaborator = userDetails.email;\n      console.log(userDetails);\n      this.collaboratorBody = {\n        \"firstName\": userDetails.firstName,\n        \"lastName\": userDetails.lastName,\n        \"email\": userDetails.email,\n        \"userId\": userDetails.userId\n      }\n    }\n  }\n  removeCollaborator(collaboratorId) {\n    console.log(this.collaborators)\n    console.log(collaboratorId);\n    console.log(this.data['id'])\n    if (this.data['id'] !== undefined) {\n      this.noteService.removeCollaborator(this.data['id'], collaboratorId).subscribe(result => {\n        console.log(result);\n      })\n    }\n    var count = 0;\n    this.collaborators.forEach(collaborator => {\n      console.log(\"enter for each\")\n      console.log(collaborator.userId + \"=\" + collaboratorId)\n      if (collaborator.userId == collaboratorId) {\n        console.log(\"enter each\")\n        this.collaborators.splice(count, 1);\n        console.log(this.collaborators);\n      }\n      else\n        count++;\n    });\n    return;\n  }\n  cancel() {\n    this.dialogRef.close();\n  }\n}","module.exports = \"<div>\\n  <div fxFlex='15'><button mat-icon-button [matMenuTriggerFor]=\\\"More\\\">\\n      <mat-icon class=\\\"material-icons\\\">more_vert</mat-icon>\\n    </button></div>\\n  <mat-menu #More=\\\"matMenu\\\" class=\\\"matmenu\\\">\\n    <div>\\n      <button mat-menu-item>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between start\\\" (click)=\\\"deleteNote(card)\\\">\\n          Delete forever\\n        </div>\\n      </button>\\n    </div>\\n    <div>\\n      <button mat-menu-item>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between start\\\" (click)=\\\"restoreNote()\\\">\\n          restore\\n        </div>\\n      </button>\\n    </div>\\n  </mat-menu>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { NoteService } from '../../service/note/note.service';\n@Component({\n    selector: 'app-delete-icons',\n    templateUrl: './delete-icons.component.html',\n    styleUrls: ['./delete-icons.component.scss']\n})\nexport class DeleteIconsComponent implements OnInit {\n    @Input() card: any;\n    @Output() removeEvent = new EventEmitter();\n    constructor(private noteService: NoteService) { }\n    ngOnInit() {\n    }\n    deleteNote(card) {\n        this.noteService.noteServiceJSON('notes/deleteForeverNotes', {\n            \"isDeleted\": true,\n            \"noteIdList\": [card.id]\n        }).subscribe(message => {\n            console.log(message);\n            this.remove();\n        });\n    }\n    remove() {\n        this.removeEvent.emit();\n    }\n    restoreNote() {\n        this.noteService.noteServiceJSON('notes/trashNotes', {\n            \"isDeleted\": false,\n            \"noteIdList\": [this.card.id]\n        }).subscribe(data => {\n            this.remove();\n            console.log(data);\n        }, err => console.log(err))\n    }\n}","module.exports = \"<!-- <div class=\\\"fixed\\\" fxLayoutAlign=\\\"space-between start\\\">\\n\\n    <div [ngClass]=\\\"{'gridView':view,'listView':!view}\\\" [fxLayout]=\\\"view?'row wrap':'column'\\\" fxLayoutGap=\\\"10px\\\" [fxLayoutAlign]=\\\"view? 'start start': 'space-around center'\\\">\\n\\n        <div *ngFor=\\\"let card of notes|search:(search?null:searchValue)\\\">\\n            <app-card class=\\\"example-card\\\" [card]=\\\"card\\\" (removeEvent)=\\\"removeEvent($event,card)\\\"></app-card>\\n        </div>\\n\\n    </div>\\n</div> -->\\n<div *ngIf=\\\"view\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div fxFlex=\\\"15\\\" fxFlex.sm=\\\"10\\\" fxFlex.xs=\\\"5\\\">\\n\\n    </div>\\n    <div fxFlex='70' fxFlex.sm=\\\"80\\\">\\n        <!-- <div> -->\\n        <ngx-masonry [options]=\\\"masonryOptions\\\" [updateLayout]=\\\"updateMasonryLayout\\\">\\n            <div fxLayoutGap=\\\"1%\\\">\\n                <div ngxMasonryItem *ngFor=\\\"let card of notes|search:(search?null:searchValue)\\\" class=\\\"display\\\">\\n                    <app-card class=\\\"example-card\\\" [card]=\\\"card\\\" (load)=\\\"updateMasonryLayout!=updateMasonryLayout\\\" (removeEvent)=\\\"removeEvent($event,card)\\\"></app-card>\\n                </div>\\n            </div>\\n        </ngx-masonry>\\n        <!-- </div> -->\\n    </div>\\n    <div fxFlex=\\\"15\\\" fxFlex.sm=\\\"10\\\" fxFlex.xs=\\\"5\\\">\\n\\n    </div>\\n</div>\\n<div *ngIf=\\\"!view\\\" fxLayoutAlign=\\\"space-around stretch\\\">\\n\\n    <div fxLayout='column' fxLayoutAlign=\\\"center stretch\\\" fxFlex=\\\"60\\\" fxFlex.sm=\\\"90\\\" fxFlex.xs=\\\"90\\\" fxLayoutGap=\\\"10px\\\">\\n        <div *ngFor=\\\"let card of notes|search:(search?null:searchValue)\\\">\\n            <app-card class=\\\"example-card\\\" [view]='!view' [card]=\\\"card\\\" (removeEvent)=\\\"removeEvent($event,card) \\\"></app-card>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".display-note {\\n  box-sizing: border-box; }\\n\\n.sample {\\n  background: transparent; }\\n\\n.textArea {\\n  background: transparent;\\n  border: none;\\n  outline: none;\\n  min-height: auto;\\n  resize: none; }\\n\\n.listView {\\n  flex-direction: column;\\n  flex: auto;\\n  flex-flow: column; }\\n\\n::ng-deep .temp {\\n  background-color: black; }\\n\\n.display {\\n  margin-bottom: 10px; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { NoteService } from '../../service/note/note.service';\nimport { DataService } from \"../../service/data/data.service\";\nexport interface matdialog {\n    title: string;\n    description: string;\n    color: any;\n}\n@Component({\n    selector: 'app-display-notes',\n    templateUrl: './display-notes.component.html',\n    styleUrls: ['./display-notes.component.scss']\n})\nexport class DisplayNotesComponent implements OnInit {\n    view = true;\n    allNotes:any\n    @Input() notes: any=[];\n    @Output() pinEvent = new EventEmitter();\n    @Input() search: boolean = true;\n    searchValue: String;\n    innerWidth;\n    model: any;\n    card: any = {};\n    constructor(private noteService: NoteService, private dataService: DataService) { \n    }\n    ngOnInit() {\n        this.dataService.currentMessage.subscribe(message => { this.searchValue = message });\n        this.dataService.currentView.subscribe(message => { this.view = message });\n    }\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.innerWidth = window.innerWidth;\n        if(this.innerWidth<=600){\n            this.view=false;\n        }\n        if(this.innerWidth>600){\n            this.view=true;\n        }\n    }\n    removeEvent($event, card) {\n        if ($event) {\n            var count = 0;\n            this.notes.forEach(note => {\n                if (card.id == note.id) {\n                    this.notes.splice(count, 1)\n                }\n                else\n                    count++;\n            });\n        }\n        if ($event == 'pin') {\n                this.pinEvent.emit(card);\n        }\n        return;\n    }\n}\n","module.exports = \"<mat-card class=\\\"card\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div class=\\\"logo\\\" fxLayoutAlign=\\\"space-around center\\\">\\n        <img mat-card-image fxFlex=\\\"50\\\" src=\\\"https://upload.wikimedia.org/wikipedia/commons/d/df/Google_Keep_icon.svg\\\">\\n    </div>\\n    <mat-card-header id=\\\"forgotPage\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\">\\n        Forgot Password\\n    </mat-card-header>\\n    <mat-card-content class=\\\"container\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <input matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\n            <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n    </mat-card-content>\\n    <mat-card-actions>\\n        <div id=\\\"resetButton\\\"><button mat-raised-button (click)=\\\"passwordReset(email.value)\\\">send mail</button></div>\\n    </mat-card-actions>\\n</mat-card>\\n<div *ngIf=\\\"isValid\\\" class=\\\"msg\\\">\\n    <p>Verification email has been sent to your email : {{email.value}}\\n        <p>\\n            <p>Click on the link in verification mail to change the password</p>\\n</div>\"","module.exports = \"#forgotPage {\\n  font-size: 25px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router'\nimport { HttpService } from 'src/app/service/http/http.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n@Component({\n    selector: 'app-forgot-password',\n    templateUrl: './forgot-password.component.html',\n    styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n    constructor(private router: Router,  private service : HttpService, public snackBar: MatSnackBar) { \n        if(localStorage.getItem(\"userToken\")!=null){\n            this.router.navigate([''])\n        }\n    }\n    ngOnInit() {\n    }\n    isValid = false;\n    email = new FormControl('', [Validators.required, Validators.email]); //Email validation\n\n    getErrorMessage() {\n        return this.email.hasError('required') ? 'You must enter a value' :\n            this.email.hasError('email') ? 'Not a valid email' :\n                '';\n    }\n    passwordReset(email) {\n        console.log(email);\n        var user = {\n            \"email\": email\n        }\n        this.service.postRequest('user/reset',user ).subscribe((data:any)=>{\n            if(data.success==true){\n                this.snackBar.open(\"mail sent\", \"Okay\");\n            }\n        })\n    }\n}","module.exports = \"<div class=\\\"example-container\\\" [class.example-is-mobile]=\\\"mobileQuery.matches\\\">\\n    <mat-toolbar class=\\\"example-toolbar\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        <div fxFlex=\\\"5\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <button mat-icon-button matTooltip=\\\"menu-bar\\\" (click)=\\\"snav.toggle()\\\">\\n\\t\\t\\t\\t<mat-icon>menu</mat-icon>\\n\\t\\t\\t</button>\\n            <div *ngIf=\\\"innerWidth>600\\\" fxFlex=\\\"10\\\" fxLayout.gt-xs=\\\"row\\\" fxFlex.gt=\\\"500px\\\" fxLayout=\\\"row\\\">\\n                <img id=\\\"img1\\\" src=\\\"../../../assets/images/logo.png\\\" />\\n                <div *ngIf=\\\"innerWidth>600\\\" fxLayoutAlign=\\\"center center\\\">\\n                    <h2>Fundoo</h2>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div fxFlex=\\\"80\\\" fxLayoutAlign=\\\"space-around center\\\" *ngIf=\\\"innerWidth>600\\\">\\n            <mat-form-field appearance=\\\"outline\\\" [style.fontSize.px]=\\\"2\\\" class=\\\"search\\\">\\n                <button mat-icon-button>\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"searchIcon\\\">search</mat-icon>\\n\\t\\t\\t\\t</button>\\n                <input fxFlex=\\\"90\\\" (click)=\\\"navigateSearch()\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"searchfor()\\\" matInput placeholder=\\\"search\\\" [style.fontSize.px]=\\\"18\\\" class=\\\"searchText\\\" autocomplete=\\\"off\\\">\\n            </mat-form-field>\\n        </div>\\n        <div fxFlex=\\\"100\\\" fxFlex.xs=\\\"60\\\" fxLayoutAlign=\\\"space-around center\\\" *ngIf=\\\"innerWidth<600\\\">\\n            <mat-icon *ngIf=\\\"hide\\\" class=\\\"searchIcon\\\" (click)=\\\"showSearch()\\\">search</mat-icon>\\n            <mat-form-field *ngIf=\\\"!hide\\\" appearance=\\\"outline\\\" [style.fontSize.px]=\\\"2\\\" class=\\\"search\\\">\\n                <button mat-icon-button>\\n\\t\\t\\t\\t\\t<mat-icon class=\\\"searchIcon\\\">search</mat-icon>\\n\\t\\t\\t\\t</button>\\n                <input fxFlex=\\\"90\\\" (click)=\\\"navigateSearch()\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"searchfor()\\\" matInput placeholder=\\\"search\\\" [style.fontSize.px]=\\\"18\\\" class=\\\"searchText\\\" autocomplete=\\\"off\\\">\\n                <button mat-icon-button (click)=\\\"showSearch()\\\">\\n\\t\\t\\t\\t\\t<mat-icon (click)=(navigateHome())>cancel</mat-icon>\\n\\t\\t\\t\\t</button>\\n            </mat-form-field>\\n        </div>\\n        <div fxFlex=\\\"25\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"settingbtn\\\">\\n            <button fxFlex=\\\"20\\\" aria-label=\\\"Toggle sidenav\\\" matTooltip=\\\"cart\\\" mat-icon-button (click)=\\\"navigateCart()\\\">\\n\\t\\t\\t\\t<mat-icon>shopping_cart</mat-icon>\\n\\t\\t\\t</button>\\n            <button *ngIf=\\\"innerWidth>600\\\" mat-icon-button color=\\\"basic\\\" id=\\\"grid\\\" (click)=\\\"changeView()\\\" matTooltip=\\\"grid\\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=view>view_stream</mat-icon>\\n\\t\\t\\t\\t<mat-icon *ngIf=!view>view_module</mat-icon>\\n\\t\\t\\t</button>\\n            <div class=\\\"profilepic\\\">\\n                <button *ngIf=\\\"newImage\\\" (click)=\\\"$event.stopPropagation()\\\" matTooltip=\\\"fundoo Account\\\" mat-mini-fab [ngStyle]=\\\"{'background-image':'url('+img+')','background-size':'cover'}\\\" [matMenuTriggerFor]=\\\"account\\\" class=\\\"imageText\\\">\\n\\t\\t\\t\\t</button>\\n                <button *ngIf=\\\"!newImage\\\" (click)=\\\"$event.stopPropagation()\\\" matTooltip=\\\"fundoo Account\\\" mat-mini-fab [matMenuTriggerFor]=\\\"account\\\" class=\\\"imageText\\\">\\n\\t\\t\\t\\t\\t{{email | uppercase | slice : 0 : 1 }}</button>\\n            </div>\\n        </div>\\n        <mat-menu #account=\\\"matMenu\\\" fxLayoutGap=\\\"4px\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"userMenu\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" fxLayoutGap=\\\"4px\\\">\\n                <div>\\n                    <button *ngIf=\\\"!newImage\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"openPicture(image)\\\" matTooltip=\\\"Profile\\\" mat-fab class=\\\"imageSelect\\\">\\n                                {{email | uppercase | slice : 0 : 1 }}</button>\\n                    <button *ngIf=\\\"newImage\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"openPicture(image)\\\" matTooltip=\\\"Profile\\\" mat-fab [ngStyle]=\\\"{'background-image': 'url(' + img + ')', 'background-size': 'cover'}\\\" class=\\\"imageSelect\\\">\\n\\t\\t\\t\\t\\t</button>\\n                </div>\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"left left\\\" class=\\\"settingBox\\\">\\n                    <span class=\\\"usernameStyle\\\">{{name}}</span>\\n                    <span class=\\\"emailStyle\\\">{{email}}</span>\\n                </div>\\n            </div>\\n            <div fxLayoutAlign=\\\"center center\\\">\\n\\n                <button mat-button (click)=\\\"logout()\\\" class=\\\"logoutButton\\\">Log Out</button>\\n            </div>\\n        </mat-menu>\\n    </mat-toolbar>\\n    <mat-sidenav-container class=\\\"example-sidenav-container\\\" [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\">\\n        <mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\">\\n            <!-- <mat-nav-list> -->\\n            <mat-list role=\\\"List\\\">\\n                <mat-list-item role=\\\"listitem\\\" id=\\\"note\\\" (click)=\\\"navigateHome()\\\" (click)=\\\" header='notes'\\\" class=\\\"navField\\\" [ngClass]=\\\"{'highlight':header=='notes', 'normal':header!='notes'}\\\">\\n                    <img id=\\\"img1\\\" src=\\\"../../../assets/images/bulb.svg\\\" />Note\\n                </mat-list-item>\\n                <mat-list-item role=\\\"listitem\\\" id=\\\"rem\\\" class=\\\"navField\\\" (click)=\\\"navigateReminder()\\\" (click)=\\\"header='reminder'\\\" [ngClass]=\\\"{'highlight':header=='reminder', 'normal':header!='reminder'}\\\">\\n                    <img id=\\\"img2\\\" src=\\\"../../../assets/images/bell.svg\\\" />Reminder\\n                </mat-list-item>\\n                <mat-divider></mat-divider>\\n                <p id=\\\"para\\\">labels</p>\\n                <div *ngFor='let label of ArrayOfLabel'>\\n                    <mat-nav-list>\\n                        <mat-list-item class=\\\"navField\\\" (click)=\\\"openLabelNotes(label.label)\\\" (click)=\\\"header= label.label\\\" [ngClass]=\\\"{'highlight':header==label.label, 'normal':header!=label.label}\\\">\\n                            <mat-icon>label_outline</mat-icon>\\n                            {{label.label}}\\n                        </mat-list-item>\\n                    </mat-nav-list>\\n                </div>\\n                <mat-list-item role=\\\"listitem\\\" id=\\\"lable\\\" class=\\\"navField\\\" (click)=\\\"openLabelDialog()\\\" (click)=\\\"header='editLabel'\\\" [ngClass]=\\\"{'highlight':header=='editLabel', 'normal':header!='editLabel'}\\\">\\n                    <mat-icon id=\\\"edit\\\">edit</mat-icon>\\n                    Edit label\\n                </mat-list-item>\\n                <mat-divider></mat-divider>\\n                <mat-list-item role=\\\"listitem\\\" id=\\\"arch\\\" class=\\\"navField\\\" (click)=\\\"navigateArchive()\\\" (click)=\\\"header='archive'\\\" [ngClass]=\\\"{'highlight':header=='archive', 'normal':header!='archive'}\\\">\\n                    <img id=\\\"img4\\\" src=\\\"../../../assets/images/archive.svg\\\" /> Archive\\n                </mat-list-item>\\n                <mat-list-item role=\\\"listitem\\\" id=\\\"bin\\\" class=\\\"navField\\\" (click)=\\\"navigateTrash()\\\" (click)=\\\"header='trash'\\\" [ngClass]=\\\"{'highlight':header=='trash', 'normal':header!='trash'}\\\">\\n                    <img id=\\\"img5\\\" src=\\\"../../../assets/images/trash.svg\\\" /> Trash\\n                </mat-list-item>\\n            </mat-list>\\n            <!-- </mat-nav-list> -->\\n        </mat-sidenav>\\n        <mat-sidenav-content>\\n            <router-outlet></router-outlet>\\n        </mat-sidenav-content>\\n    </mat-sidenav-container>\\n</div>\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0; }\\n\\n.searchIcon {\\n  cursor: pointer; }\\n\\n.example-is-mobile .example-toolbar {\\n  position: fixed;\\n  z-index: 2; }\\n\\nh1.example-app-name {\\n  margin-left: 8px; }\\n\\n.example-sidenav-container {\\n  flex: 1; }\\n\\n.example-is-mobile .example-sidenav-container {\\n  flex: 1 0 auto; }\\n\\n.sear {\\n  -ms-grid-row-align: center;\\n      align-self: center; }\\n\\n.search {\\n  width: 100%;\\n  border: none;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.example-toolbar {\\n  box-shadow: 0px 3px lightgray; }\\n\\n.example-app-name {\\n  padding-left: 5%; }\\n\\n#searchbtn {\\n  background-color: #cec1c1; }\\n\\n.searchText {\\n  margin-left: 10px;\\n  margin-bottom: 4px; }\\n\\n.account {\\n  margin-left: 10px; }\\n\\n#grid {\\n  margin-left: 15px; }\\n\\n#setting {\\n  margin-left: 15px; }\\n\\n#apps {\\n  margin-left: 15px; }\\n\\n#notification {\\n  margin-right: 30px; }\\n\\n#rema {\\n  font-size: 20px;\\n  font-family: sans-serif; }\\n\\nmat-sidenav {\\n  width: 250px; }\\n\\n.search {\\n  margin-left: 25%; }\\n\\n#img1 {\\n  margin-right: 10%; }\\n\\n#img2 {\\n  margin-right: 10%; }\\n\\n#edit {\\n  margin-right: 10%; }\\n\\n#img4 {\\n  margin-right: 10%; }\\n\\n#img5 {\\n  margin-right: 10%; }\\n\\n.container {\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  background-color: white; }\\n\\n.example-is-mobile .example-toolbar {\\n  position: fixed;\\n  z-index: 2; }\\n\\nh1.example-app-name {\\n  margin-left: 2%; }\\n\\n.example-is-mobile .example-sidenav-container {\\n  flex: 1 0 auto; }\\n\\n#para {\\n  margin-left: 9%; }\\n\\n.settings {\\n  display: flex;\\n  flex-direction: row;\\n  float: right; }\\n\\n.apps {\\n  display: flex;\\n  flex-direction: row;\\n  width: 4%; }\\n\\n.example-toolbar {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.matMenu {\\n  width: 10px; }\\n\\n.mat-raised-button:not([class*=mat-elevation-z]) {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  margin-left: 36%; }\\n\\n.mat-stroked-button:not([class*=mat-elevation-z]) {\\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2), 0 0 0 0 rgba(0, 0, 0, 0.14), 0 0 0 0 rgba(0, 0, 0, 0.12);\\n  width: 140px; }\\n\\n.mat-icon {\\n  color: #676b6e; }\\n\\n.mat-icon:hover {\\n  color: black; }\\n\\n.logoutButton {\\n  background-color: navy;\\n  margin-top: 25px;\\n  color: aliceblue; }\\n\\n.userMenu {\\n  border-radius: 18px; }\\n\\n::ng-deep .userMenu {\\n  background-color: #dde0df;\\n  padding: 6px; }\\n\\n.navField:hover {\\n  background-color: #e6e6e6;\\n  border-radius: 0 50px 50px 0;\\n  font-size: 18px; }\\n\\n.highlight {\\n  background-color: #f9fac1;\\n  border-radius: 0 50px 50px 0;\\n  font-size: 18px; }\\n\\n.imageText,\\n.imageSelect {\\n  outline: none; }\\n\"","import { ChangeDetectorRef, Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MatDialog } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { DataService } from '../../service/data/data.service';\nimport { Label } from '../../Models/model.model';\nimport { LabelDialogComponent } from '../label-dialog/label-dialog.component';\nimport { NoteService } from '../../service/note/note.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ImageDialogComponent } from '../image-dialog/image-dialog.component'\nimport { environment } from '../../../environments/environment'\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n    view = true;\n    name: string;\n    email: string;\n    imageProfile: string;\n    image;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n    mobileQuery: MediaQueryList;\n    private _mobileQueryListener: () => void;\n    search: string;\n    check\n    labelNotes;\n    hide = true;\n    profile;\n    imageFile = null;\n    innerWidth: number;\n    header = 'notes'\n    ArrayOfLabel=[];\n    public newImage\n    img\n    constructor(public dialog1: MatDialog, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, private router: Router, private dataService: DataService, public noteService: NoteService) {\n        this.mobileQuery = media.matchMedia('(max-width: 600px)');\n        this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n        this.mobileQuery.addListener(this._mobileQueryListener);\n        this.innerWidth = window.innerWidth;\n        this.router.navigate(['home'])\n    }\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.innerWidth = window.innerWidth;\n    }\n    ngOnInit() {\n        this.getLabel();\n        this.name = localStorage.getItem('firstName');\n        this.email = localStorage.getItem('email');\n        this.newImage = localStorage.getItem('imageUrl');\n        this.img = environment.profileUrl + \"/\" + this.newImage\n        console.log(\"inside home ngOnInit\");\n        this.dataService.currentPhoto.subscribe(message => {\n            console.log(\"variable\");\n\n            this.image = message\n            this.newImage = localStorage.getItem('imageUrl');\n            this.img = environment.profileUrl + \"/\" + this.newImage\n        })\n    }\n    navigateArchive() {\n        this.router.navigate(['archive']);\n    }\n    navigateHome() {\n        this.router.navigate(['home']);\n    }\n    navigateTrash() {\n        this.router.navigate(['trash']);\n    }\n    navigateSearch() {\n        this.router.navigate(['search'])\n    }\n    navigateReminder() {\n        this.router.navigate(['reminder']);\n    }\n    navigateCart() {\n        console.log(\"cart\")\n    }\n    searchfor() {\n        this.dataService.changeMessage(this.search);\n    }\n    showSearch() {\n        return this.hide = !this.hide\n    }\n    logout() {\n        localStorage.clear();\n        this.router.navigate(['login']);\n        this.ngOnInit();\n    }\n    ngOnDestroy() {\n        this.mobileQuery.removeListener(this._mobileQueryListener);\n        this.destroy$.next(true);\n        this.destroy$.unsubscribe();\n    }\n    openLabelNotes(labelName) {\n        this.router.navigate(['label', labelName]);\n    }\n    getLabel() {\n        try {\n            this.noteService.getLabels()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(result => {\n                    this.ArrayOfLabel = result[\"data\"][\"details\"];\n                    this.dataService.updateLabels(result[\"data\"][\"details\"]);\n                    // this.dataService.currentLabels.subscribe(message => {this.ArrayOfLabel = message });\n                })\n        } catch{\n            console.log(\"Error in getLabel\");\n        }\n    }\n    openLabelDialog() {\n        const dialogRef = this.dialog1.open(LabelDialogComponent, {\n            data: { data: this.ArrayOfLabel },\n            width: 'auto',\n            height: 'auto'\n        });\n        dialogRef.afterClosed().subscribe(result => {\n\n        })\n    }\n    changeView() {\n        this.view = !this.view;\n        this.dataService.changeView(this.view);\n    }\n\n    onFileUpload(event) {\n        this.imageFile = event.path[0].files[0];\n        const uploadImage = new FormData();\n        uploadImage.append('file', this.imageFile, this.imageFile.name);\n        this.openPicture(event);\n    }\n    openPicture(data) {\n        const dialogRef = this.dialog1.open(ImageDialogComponent, {\n            width: 'auto',\n            height: 'auto',\n            data: data,\n            //   disableClose: true\n        })\n        dialogRef.afterClosed().subscribe(result => {\n            if (result == \"imageChange\") {\n                console.log(\"inside\");\n            }\n            this.dataService.currentPhoto.subscribe(response => this.profile = response)\n            if (this.profile = true) {\n                this.imageProfile = localStorage.getItem('imageUrl');\n                this.img = environment.profileUrl + \"/\" + this.imageProfile;\n            }\n        })\n    }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" style=\\\"padding:5px;height:80%;\\\">\\n    <div mat-dialog-title>\\n        <span>Select Profile Photo</span>\\n    </div>\\n    <div class=\\\"body\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\">\\n        <button mat-button (click)=\\\"photoInput.click()\\\">Select a photo from your computer</button>\\n\\n        <input #photoInput type=\\\"file\\\" style=\\\"display:none\\\" (change)=\\\"fileChangeEvent($event)\\\">\\n        <image-cropper [imageChangedEvent]=\\\"imageChangedEvent\\\" [maintainAspectRatio]=\\\"true\\\" [aspectRatio]=\\\"1\\\" [resizeToWidth]=\\\"168\\\" format=\\\"png\\\" (imageCropped)=\\\"imageCropped($event)\\\" (imageLoaded)=\\\"imageLoaded()\\\" (loadImageFailed)=\\\"loadImageFailed()\\\"></image-cropper>\\n\\n\\n        <img [src]=\\\"imageBefore\\\" />\\n    </div>\\n    <div style=\\\"bottom:5;margin-top: 5%\\\" fxLayout=\\\"row\\\">\\n        <div style=\\\"padding:5px;\\\">\\n            <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"{'image':croppedImage}\\\" (click)=setimage()>Save as\\n        profile picture</button>\\n        </div>\\n        <div style=\\\"padding:5px;\\\">\\n            <button mat-button [mat-dialog-close]=\\\"{'title':false}\\\" cdkFocusInitial>Cancel</button>\\n        </div>\\n\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { DataService } from '../../service/data/data.service';\nimport { NoteService } from '../../service/note/note.service';\nimport { environment } from '../../../environments/environment'\n@Component({\n  selector: 'app-image-dialog',\n  templateUrl: './image-dialog.component.html',\n  styleUrls: ['./image-dialog.component.scss']\n})\nexport class ImageDialogComponent implements OnInit {\n  imageBefore = environment.profileUrl+\"/\"+ localStorage.getItem(\"imageUrl\")\n  imageChangedEvent: any = null;\n  croppedImage: any = null;\n  constructor(public dialogRef: MatDialogRef<ImageDialogComponent>, @Inject(MAT_DIALOG_DATA) public data, public dataService: DataService, public noteService: NoteService) { }\n  ngOnInit() {\n  }\n  fileChangeEvent(event: any): void {\n    console.log(event, \"FLE CHNAGE\");\n    this.imageChangedEvent = event;\n  }\n  imageCropped(event:ImageCroppedEvent) {\n    console.log(\"event-----\",event)\n    this.croppedImage = event.file;\n    console.log(this.croppedImage)\n  }\n  imageLoaded() {\n    console.log(\"image loaded\")\n  }\n  loadImageFailed() {\n    console.log(\"image failed\")\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  setimage() {\n    const uploadData = new FormData();\n    console.log(\"croppeed image\", this.croppedImage)\n    uploadData.append('file', this.croppedImage)\n    console.log(\"uploadData\", uploadData);\n    this.noteService.uploadImage(uploadData).subscribe(data => {\n      localStorage.setItem('imageUrl', data['status'].imageUrl)\n      this.dataService.changeImage(true)\n      this.dialogRef.close(\"imageChange\")\n      console.log(data)\n    })\n\n\n  }\n}\n","module.exports = \"<div>\\n    <div mat-dialog-title>Edit Labels </div>\\n    <div fxLaoutGap=\\\"space-between\\\" fxlayoutAlign=\\\"row\\\" mat-dialog-content>\\n        <div class=\\\"clear done\\\">\\n            <mat-icon fxFlex=10 (click)=\\\"clear()\\\" class=\\\"visible\\\" mat-icon-button>clear</mat-icon>\\n        </div>\\n        <input class=\\\"textArea\\\" fxFlex=80 [(ngModel)]=\\\"labelName\\\" placeholder=\\\"Create new Label\\\">\\n        <div>\\n            <mat-icon fxFlex=10 fxLayoutAlign=\\\"space-between end\\\" (click)=\\\"addLabel()\\\" class=\\\"visible\\\" mat-icon-button>done</mat-icon>\\n        </div>\\n    </div>\\n    <mat-divider class=\\\"divider\\\"></mat-divider>\\n    <div class=\\\"divider\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" *ngFor=\\\"let label of ArrayOfLabel\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <mat-icon (click)=\\\"deleteLabel(label.id)\\\" class=\\\"visible\\\" fxFlex=10 mat-icon-button>\\n                delete</mat-icon>\\n        </div>\\n        <input class=\\\"textArea\\\" fxFlex=\\\"80\\\" [(ngModel)]=\\\"label.label\\\" id=label.id>\\n        <div fxFlex=\\\"10\\\">\\n            <mat-icon (click)=edit(label) class=\\\"visible\\\">edit</mat-icon>\\n        </div>\\n    </div>\\n    <mat-divider class=\\\"divider\\\"></mat-divider>\\n    <div>\\n        <div mat-button class=\\\"visible\\\" fxLayoutAlign=\\\"end end\\\" (click)=\\\"close(); addLabel()\\\">Done</div>\\n    </div>\\n</div>\"","module.exports = \".textArea {\\n  background: transparent;\\n  border: none;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.divider {\\n  margin-bottom: 7%; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Label } from '../../Models/model.model';\nimport { NoteService } from '../../service/note/note.service';\nimport { element } from '@angular/core/src/render3/instructions';\n@Component({\n  selector: 'app-label-dialog',\n  templateUrl: './label-dialog.component.html',\n  styleUrls: ['./label-dialog.component.scss']\n})\nexport class LabelDialogComponent implements OnInit {\n\n  labelName: string;\n  ArrayOfLabel=[];\n  label: Label;\n  constructor(public dialogRef: MatDialogRef<LabelDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public noteService: NoteService) { \n      this.ArrayOfLabel = data.data;\n    }\n\n  ngOnInit() {\n    // this.ArrayOfLabel = this.data;\n  }\n  clear() {\n    this.labelName = ' ';\n  }\n\n  addLabel() {\n    try {\n      if (this.labelName != undefined && this.labelName !== '') {\n        let userid = localStorage.getItem('userId');\n        let flag = true;\n        this.ArrayOfLabel.forEach(element=>{\n          if(element.label==this.labelName){\n            flag=false;\n            console.log(\"label already present\")\n            return\n          }\n        })\n        let label = {\n          userId: userid,\n          label: this.labelName,\n          isDeleted: \"false\"\n        }\n        if(flag){\n          this.noteService.noteLabel(label).subscribe(message => {\n            console.log(message);\n            this.labelName = '';\n            this.ArrayOfLabel.push(message);\n          })\n          return;\n        }\n        \n       \n      }\n    }\n    catch (error) {\n      console.log(\"Error in add Label\" + error);\n    };\n  }\n  deleteLabel(labelid) {\n    try {\n      this.noteService.deleteLabel(labelid).subscribe(data => {\n        console.log(data);\n        let count = 0;\n        this.ArrayOfLabel.forEach(label => {\n          if (label.id == labelid) {\n            this.ArrayOfLabel.splice(count, 1);\n          }\n          else\n            count++;\n        });\n      })\n    } catch (error) {\n      console.log(\"Errror in delete label\" + error);\n    }\n\n  }\n  edit(label) {\n    console.log(label);\n    let body = {\n      \"label\": label.label,\n      \"isDeleted\": false,\n      \"id\": label.id,\n      \"userId\": localStorage.getItem('userid')\n    }\n    this.noteService.updateLabel(label.id, body).subscribe(message => {\n      console.log(message);\n    })\n  }\n  close() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<app-display-notes [notes]=\\\"labelNotes\\\"></app-display-notes>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NoteService } from '../../service/note/note.service';\n\n@Component({\n  selector: 'app-labels',\n  templateUrl: './labels.component.html',\n  styleUrls: ['./labels.component.scss']\n})\nexport class LabelsComponent implements OnInit {\n  labelNotes = [];\n  constructor(private router: Router, private routes: ActivatedRoute, public noteService: NoteService) { }\n  sub\n  labelName\n  ngOnInit() {\n    this.sub = this.routes.params.subscribe(params => {\n      console.log(params);\n      this.labelName = params['labelName'];\n      this.getLabel();\n    });\n  }\n  getLabel() {\n    this.noteService.getNotesListByLabel(this.labelName).subscribe(message => {\n      this.labelNotes = message['data']['data']\n    })\n  }\n}\n","module.exports = \"<div class=\\\"main\\\">\\n    <mat-card class=\\\"card\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"100\\\" fxLayoutGap=\\\"1px\\\">\\n        <mat-card class=\\\"loginCard\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"1px\\\">\\n            <div class=\\\"logo\\\" fxLayoutAlign=\\\"center center\\\">\\n                <img mat-card-image fxFlex='50' src=\\\"https://upload.wikimedia.org/wikipedia/commons/d/df/Google_Keep_icon.svg\\\">\\n            </div>\\n            <mat-label id=\\\"loginPage\\\">Log In</mat-label>\\n            <mat-card-content>\\n                <div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center stretch\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"5px\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"50\\\">\\n                        <mat-label>Email</mat-label>\\n                        <input matInput name=\\\"email\\\" [formControl]=\\\"email\\\" required>\\n                        <mat-error *ngIf=\\\"email.invalid\\\">{{getEmailErrorMessage()}}</mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"50\\\">\\n                        <mat-label>Password</mat-label>\\n                        <input matInput name=\\\"password\\\" [formControl]=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" required>\\n                        <mat-icon class=\\\"visible\\\" matSuffix (click)=\\\"hide = !hide\\\">{{hide ?'visibility' : 'visibility_off'}}</mat-icon>\\n                        <mat-error *ngIf=\\\"password.invalid\\\">{{getPasswordErrorMessage()}}</mat-error>\\n                    </mat-form-field>\\n                </div>\\n            </mat-card-content>\\n            <mat-card-actions>\\n                <div id=\\\"logInButton\\\"><button mat-raised-button color=\\\"primary\\\" (click)=\\\"secureLogin(email.value, password.value)\\\">Log In</button>\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"register()\\\"> Sign Up</button></div>\\n            </mat-card-actions>\\n            <mat-card-actions>\\n                <div id=\\\"forgotLink\\\"><a routerLink=\\\".\\\" (click)=\\\"forgot()\\\">Forgot Password</a></div>\\n            </mat-card-actions>\\n        </mat-card>\\n    </mat-card>\\n</div>\"","module.exports = \"/* You can add global styles to this file, and also import other style files */\\n.visible {\\n  cursor: pointer; }\\n.main {\\n  background: #d1d1d1;\\n  height: 100%; }\\n.card {\\n  height: 100vh;\\n  min-height: 640px;\\n  min-width: 360px; }\\nhtml, body {\\n  height: 100%; }\\nbody {\\n  margin: 0;\\n  font-family: 'Roboto', sans-serif; }\\n#loginPage {\\n  font-size: 25px; }\\n.logo {\\n  padding: 5px; }\\n.visible {\\n  cursor: pointer; }\\n.main {\\n  background: #d1d1d1;\\n  height: 100%; }\\n.card {\\n  height: 100vh;\\n  min-height: 640px;\\n  min-width: 360px; }\\n.loginCard {\\n  border-radius: 12px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { HttpService } from '../../service/http/http.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n\n    public hide = true;\n    public email = new FormControl('', [Validators.required, Validators.email]);\n    public password = new FormControl('', [Validators.required, Validators.minLength(8)])\n\n    constructor(private router: Router, \n        private service : HttpService,  public snackBar: MatSnackBar) {\n         }\n    ngOnInit() {\n        console.log(this.router)\n        console.log(this.service)\n    }\n\n    getEmailErrorMessage(): String {\n        return this.email.hasError('required') ?\n            'You must enter email' : this.email.hasError('email') ? 'Not a Valid Email' : ''\n    }\n    getPasswordErrorMessage(): String {\n        return this.password.hasError('required') ?\n            'You must enter password' : this.password.hasError('minlength') ? 'Wrong password' : ''\n    }\n    register() {\n        this.router.navigate(['registration'])\n    }\n    forgot() {\n        this.router.navigate(['forgot'])\n    }\n    secureLogin(email, password){\n        if(email != null && password != null){\n            var user = {\n                \"email\" : email,\n                \"password\" : password\n            }\n            this.service.postRequest('user/login', user).subscribe((data:any)=>{\n                console.log(data);\n                localStorage.setItem('userToken', data.id);\n                localStorage.setItem('userId', data.userId)\n                localStorage.setItem('email', data.email)\n                localStorage.setItem('firstName', data.firstName)\n                localStorage.setItem('lastName', data.lastName)\n                localStorage.setItem('imageUrl', data.imageUrl)\n                if(data.id){\n                    this.router.navigate(['home'])\n                    return true\n                }\n                else{\n                    this.snackBar.open('login unsuccessfull', \"okay\")\n                    this.router.navigate(['login'])\n                    return false\n                }\n            })\n        }\n    }\n}\n","module.exports = \"<div fxFlex='100' class=\\\"dialog\\\" fxLayout=\\\"column\\\">\\n    <app-card [fullIcon]=\\\"fullIcon\\\" (removeEvent)=\\\"remove($event)\\\" [card]=\\\"card\\\"></app-card>\\n</div>\"","module.exports = \".takenote {\\n  background: transparent;\\n  margin-bottom: 10px;\\n  color: #ada6a6;\\n  border: none;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.textArea {\\n  background: transparent;\\n  border: none;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  overflow: scroll; }\\n\\n::ng-deep .mat-dialog-container {\\n  padding: 0%;\\n  border-radius: 18px !important; }\\n\\n.display-note {\\n  border-radius: 0px; }\\n\\n.example {\\n  width: 100%;\\n  border-radius: 18px; }\\n\\n@media only screen and (max-width: 2520px) {\\n  .dialog {\\n    width: 750px; } }\\n\\n@media only screen and (max-width: 1200px) {\\n  .dialog {\\n    width: 700px; } }\\n\\n@media only screen and (max-width: 900px) {\\n  .dialog {\\n    width: 650px; } }\\n\\n@media only screen and (max-width: 600px) {\\n  .dialog {\\n    width: 450px; } }\\n\\n@media only screen and (max-width: 450px) {\\n  .dialog {\\n    width: 400px; } }\\n\\n@media only screen and (max-width: 350px) {\\n  .dialog {\\n    width: 320px; } }\\n\"","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatCard } from '@angular/material';\nimport { matdialog } from '../display-notes/display-notes.component';\nimport { NoteService } from '../../service/note/note.service';\n\n@Component({\n  selector: 'app-note-dialog',\n  templateUrl: './note-dialog.component.html',\n  styleUrls: ['./note-dialog.component.scss']\n})\nexport class NoteDialogComponent implements OnInit {\n  @Output() removeEvent = new EventEmitter();\n  constructor(public dialogRef: MatDialogRef<NoteDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: matdialog, private noteService: NoteService) { }\n  card = this.data;\n  fullIcon: boolean;\n  ngOnInit() {\n    this.fullIcon = true\n    console.log(this.data);\n  }\n  changeColor($event) {\n    this.card.color = $event;\n  }\n  closeDialog() {\n    this.dialogRef.close();\n  }\n  remove($event) {\n    if ($event) {\n      this.dialogRef.close(\"deleted\");\n    }\n    else\n      this.closeDialog();\n  }\n  changePin(card) {\n    card.isPined = !card.isPined;\n  }\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n    <div fxFlex='13'><button id=\\\"Remind\\\" matTooltip=\\\"Remind me\\\" mat-icon-button [matMenuTriggerFor]=\\\"remindMenu\\\">\\n      <mat-icon class=\\\"material-icons\\\">notification_important</mat-icon>\\n    </button>\\n    </div>\\n    <mat-menu #remindMenu=\\\"matMenu\\\" class=\\\"Remaindermatmenu\\\">\\n        <app-reminder-icon [card]=card></app-reminder-icon>\\n    </mat-menu>\\n    <div fxFlex='13'>\\n        <button mat-icon-button matTooltip=\\\"Collaborator\\\" (click)=\\\"addCollaborator()\\\">\\n      <mat-icon class=\\\"material-icons\\\">person_add</mat-icon>\\n    </button>\\n    </div>\\n    <div fxFlex='13'>\\n        <button mat-icon-button matTooltip=\\\"Select theme\\\" [matMenuTriggerFor]=\\\"selectTheme\\\">\\n      <mat-icon class=\\\"material-icons\\\">color_lens</mat-icon>\\n    </button>\\n    </div>\\n    <mat-menu #selectTheme=\\\"matMenu\\\">\\n        <div fxLayout=row *ngFor='let row of colorArray' fxLayoutAlign=\\\"space-around center\\\">\\n            <div *ngFor='let color of row'>\\n                <div *ngIf=\\\"color.color == card.color\\\">\\n                    <button [ngStyle]=\\\"{'background-color': color.color }\\\" (click)='changeColor(color.color)' matTooltip=\\\"{{color.name}}\\\" mat-card-avatar class=\\\"visible\\\">\\n                    <mat-icon>\\n                      done\\n                    </mat-icon>\\n                  </button>\\n                </div>\\n                <div *ngIf=\\\"color.color != card.color\\\">\\n                    <button [ngStyle]=\\\"{'background-color': color.color }\\\" (click)='changeColor(color.color)' matTooltip=\\\"{{color.name}}\\\" mat-card-avatar class=\\\"visible\\\"></button>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </mat-menu>\\n    <div fxFlex='13'>\\n        <button mat-icon-button>\\n      <mat-icon class=\\\"material-icons\\\">image</mat-icon>\\n    </button>\\n    </div>\\n    <div fxFlex='13'>\\n        <button mat-icon-button (click)=\\\"changeArchiveNote()\\\">\\n      <mat-icon matTooltip=\\\"unarchive\\\" *ngIf=card.isArchived class=\\\"material-icons\\\">unarchive</mat-icon>\\n      <mat-icon matTooltip=\\\"archive\\\" *ngIf=!card.isArchived class=\\\"material-icons\\\">archive</mat-icon>\\n    </button>\\n    </div>\\n    <div fxFlex='13'>\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"More\\\">\\n      <mat-icon class=\\\"material-icons\\\">more_vert</mat-icon>\\n    </button>\\n    </div>\\n    <mat-menu #More=\\\"matMenu\\\" class=\\\"matmenu\\\" fxLayoutAlign=\\\"space-between start\\\">\\n        <div *ngIf=addLabel (click)=\\\"$event.stopPropagation()\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between start\\\" class=\\\"mainMenus\\\">\\n            <button mat-menu-item (click)=\\\"trashNote()\\\">\\n        <span>Delete</span>\\n      </button>\\n            <button mat-menu-item (click)=\\\"addLabelToggle()\\\" (click)=\\\"$event.stopPropagation()\\\">\\n        <span>Add Label</span>\\n      </button>\\n            <button mat-menu-item (click)=\\\"$event.stopPropagation()\\\">\\n        <span>Add drawing</span>\\n      </button>\\n            <button mat-menu-item (click)=\\\"openQandA()\\\">\\n        <span>Ask Question</span>\\n      </button>\\n            <button mat-menu-item>\\n        <span>Make a copy</span>\\n      </button>\\n            <button mat-menu-item>\\n        <span>\\n          Show checkboxes\\n        </span>\\n      </button>\\n        </div>\\n        <div (clickOutside)=\\\"onClickedOutside($event)\\\" *ngIf=!addLabel fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around start\\\">\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around start\\\">\\n                <span>Label note</span>\\n                <div>\\n                    <input class=\\\"textArea\\\" fxFlex=80 [(ngModel)]=\\\"labelName\\\" placeholder=\\\"Search for Label\\\">\\n                </div>\\n                <div *ngFor=\\\"let label of labelList\\\">\\n                    <div *ngIf=\\\"label.id!=''\\\">\\n                        <mat-checkbox (click)=\\\"labelToNote(label)\\\">\\n                            {{label.label}}</mat-checkbox>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </mat-menu>\\n    <div *ngIf=\\\"show\\\">\\n        <button class=\\\"addnote\\\" color=\\\"primary\\\" mat-button (click)=\\\"updateNote()\\\">close</button>\\n    </div>\\n</div>\"","module.exports = \".mat-icon {\\n  color: #676b6e; }\\n\\n.mat-icon:hover {\\n  color: black; }\\n\"","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { NoteService } from '../../service/note/note.service';\nimport { MatDialog } from '@angular/material';\nimport { DataService } from '../../service/data/data.service'\nimport { Label } from '../../Models/model.model'\nimport { Router } from '@angular/router';\nimport { CollaboratorDialogComponent } from '../collaborator-dialog/collaborator-dialog.component'\n@Component({\n  selector: 'app-note-icons',\n  templateUrl: './note-icons.component.html',\n  styleUrls: ['./note-icons.component.scss']\n})\nexport class NoteIconsComponent implements OnInit {\n  @Input() card: any\n  @Output() removeEvent = new EventEmitter();\n  @Output() addNoteEvent = new EventEmitter();\n  @Input() show = true;\n  \n  labelList: Label\n  addLabel: boolean = true;\n  count: number = 0;\n  model: any;\n  colorArray =\n    [[\n      { 'color': '#ffffff', 'name': 'white' },\n      { 'color': '#f28b82', 'name': 'red' },\n      { 'color': '#fbbc04', 'name': 'orange' },\n      { 'color': '#fff475', 'name': 'yellow' }\n    ],\n    [\n      { 'color': '#ccff90', 'name': 'green' },\n      { 'color': '#a7ffeb', 'name': 'teal' },\n      { 'color': '#cbf0f8', 'name': 'blue' },\n      { 'color': '#aecbfa', 'name': 'dark blue' }],\n    [\n      { 'color': '#d7aefb', 'name': 'purple' },\n      { 'color': '#fdcfe8', 'name': 'pink' },\n      { 'color': '#e6c9a8', 'name': 'brown' },\n      { 'color': '#e8eaed', 'name': 'grey' }\n    ]]\n  constructor(private noteService: NoteService, private router: Router, public dialog: MatDialog, public dataService: DataService) { \n  }\n\n  ngOnInit() {\n    this.dataService.currentLabels.subscribe(message => { this.labelList = message });\n\n  }\n  remove($needed) {\n    this.removeEvent.emit($needed);\n  }\n  changeColor(color) {\n    if (this.card.id == undefined) {\n      this.card.color = color;\n      return;\n    }\n    else {\n      this.card.color = color;\n      this.noteService.noteServiceJSON('notes/changesColorNotes', {\n        \"color\": color,\n        'noteIdList': [this.card.id]\n      }).subscribe(data => {\n      },\n        err => {\n          console.log(err, \"err\");\n        })\n    }\n  }\n  updateNote() {\n    if (this.card.id == undefined) {\n      this.addNoteEvent.emit();\n\n      return;\n    }\n    else {\n      this.remove(false);\n    }\n  }\n  changeArchiveNote() {\n    if (this.card.id == undefined) {\n      this.card.isArchived = true;\n      this.addNoteEvent.emit();\n      return;\n    }\n    this.card.isArchived = !this.card.isArchived;\n    this.model = {\n      noteIdList: [this.card.id],\n      isArchived: this.card.isArchived\n    }\n    this.noteService.unarchiveNote(this.model).subscribe(message => {\n      console.log(message);\n      this.remove(true);\n    })\n  }\n\n  trashNote() {\n    if (this.card.id == undefined) {\n      console.log(\"can't delete creating note\");\n      return;\n    }\n    else {\n      console.log(\"Card need to be deleted\");\n      console.log(this.card.id)\n      let body={\n        \"isDeleted\": true,\n        \"noteIdList\": [this.card.id]\n      }\n      this.noteService.noteServiceJSON('notes/trashNotes',body).subscribe(data => {\n        this.remove(true);\n      }, err => console.log(err))\n    }\n  }\n  addCollaborator() {\n    const dialogRef = this.dialog.open(CollaboratorDialogComponent, {\n      width : 'auto',\n      height : 'auto',\n      data : {\n        collaborators : this.card.collaborators,\n        id : this.card.id\n      }\n    })\n  }\n  addLabelToggle() {\n    this.addLabel = !this.addLabel;\n  }\n\n  labelToNote(label) {\n    console.log(label);\n    console.log(this.card.noteLabels.indexOf(label));\n    let flag=true; \n    this.card.noteLabels.forEach(list => {\n      if (list.id == label.id) {\n        console.log(\"Already label exist\");\n        flag=false;\n      }\n    });\n    if(flag){\n      this.service(label)\n    }\n    this.addLabel=!this.addLabel\n  }\n  service(label) {\n    this.card.noteLabels.push(label);\n    if (this.card.id != undefined) {\n      this.noteService.addLabelToNote(this.card.id, label.id, '').subscribe(message => {\n        console.log(message);\n      })\n    }\n    else\n      this.card.labelIdList.push(label.id);\n  }\n  isSelected(id) {\n    console.log(\"isSelected\")\n  }\n  openQandA() {\n    this.router.navigate(['questionAnswer', this.card.id]);\n  }\n  onClickedOutside($event){\n    this.addLabel = true\n  }\n}\n","module.exports = \"<div class=\\\"notesArea\\\">\\n    <div>\\n        <app-add-notes (newNoteEvent)=\\\"getNewNote($event)\\\"></app-add-notes>\\n    </div>\\n    <div *ngIf=\\\"pinNotes.length\\\" class=\\\"pins\\\">Pinned</div>\\n    <div class=\\\"note\\\">\\n        <app-display-notes (pinEvent)=\\\"getNewNote($event)\\\" [notes]=\\\"pinNotes\\\"></app-display-notes>\\n    </div>\\n    <div *ngIf=\\\"unPinNotes.length\\\" class=\\\"pins\\\">Un Pinned</div>\\n    <div class=\\\"note\\\">\\n        <app-display-notes (pinEvent)=\\\"getNewNote($event)\\\" [notes]=\\\"unPinNotes\\\"></app-display-notes>\\n    </div>\\n</div>\"","module.exports = \".pins {\\n  margin-bottom: 20px;\\n  margin-left: 12%; }\\n\"","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { Location }from '@angular/common'\nimport { NoteService } from '../../service/note/note.service'\nimport { DataService } from 'src/app/service/data/data.service';\nimport { Router } from '@angular/router';\n@Component({\n    selector: 'app-notes',\n    templateUrl: './notes.component.html',\n    styleUrls: ['./notes.component.scss']\n})\nexport class NotesComponent implements OnInit, OnChanges {\n    pinNotes = [];\n    unPinNotes = [];\n    cardData = [];\n    constructor(private service: NoteService, private dataService : DataService, public router: Router, private location: Location) { }\n    ngOnInit() {\n        this.getAllCard();\n    }\n    getNewNote($event) {\n        this.cardData.push($event);\n        if ($event[\"isArchived\"] == false) {\n            if ($event[\"isPined\"] == false) {\n                this.unPinNotes.reverse()\n                this.unPinNotes.push($event);\n                this.unPinNotes.reverse();\n            }\n            else{\n                this.pinNotes.reverse();\n                this.pinNotes.push($event);\n                this.pinNotes.reverse();\n            }\n\n                \n        }\n    }\n    printCards(){\n        this.pinNotes;\n        this.unPinNotes;\n    }\n    ngOnChanges() {\n        console.log(\"Onchanges\");\n    }\n    getAllCard() {\n        this.service.noteServiceGetData('notes/getNotesList').subscribe(data => {\n            console.log(data)\n            this.cardData = data[\"data\"].data\n            console.log(\"carddata\", this.cardData)\n            this.check();\n            return\n        })\n    }\n    check() {\n        this.cardData.forEach(element => {\n            if (element[\"isDeleted\"] == false && element[\"isArchived\"] == false) {\n                if (element[\"isPined\"] == false) {\n                    this.unPinNotes.push(element);\n                    this.unPinNotes.reverse();\n                }\n                else\n                    this.pinNotes.push(element);\n                    this.pinNotes.reverse();\n            }\n        });\n    }\n}\n","module.exports = \"<mat-card class=\\\"answerCard\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between start\\\">\\n        <div fxFlex=90 fxLayout=\\\"column\\\">\\n            <div class=\\\"noteContent\\\" matTooltip=\\\"Note Title\\\">{{card.title}} </div>\\n            <div class=\\\"noteContent\\\" matTooltip=\\\"Note Description\\\">{{card.description}}</div>\\n        </div>\\n        <div fxFlex=10 matTooltip=\\\"Go back to notes\\\" (click)=\\\"close()\\\">\\n            <button mat-stroked-button color='primary'>Close</button>\\n        </div>\\n    </div>\\n    <hr>\\n    <div *ngIf=\\\"show==0\\\">\\n        <div [froalaEditor] [(froalaModel)]=\\\"question\\\" id=\\\"froala-editor\\\"></div>\\n        <div fxLayoutAlign=\\\"end center\\\"><button (click)=\\\"addQuestion()\\\" mat-button>Done</button> </div>\\n    </div>\\n    <div *ngIf=\\\"show!=0\\\">\\n        <div> Question:</div>\\n        <div *ngIf=\\\"question.message\\\" [innerHTML]=\\\"questions.message\\\"></div>\\n    </div>\\n</mat-card>\\n<div *ngIf=\\\"show!=0\\\" class=\\\"answerCard\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n        <button [ngStyle]=\\\"{'background-image':'url(' +image+card.user.imageUrl+ ')','background-size':'cover'}\\\" mat-mini-fab></button>\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around start\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n                <div>{{card.user.firstName | titlecase}} {{card.user.lastName | titlecase}}</div>\\n                <div>{{card.modifiedDate | date:'medium'}}</div>\\n            </div>\\n            <div [innerHTML]=\\\"questions.message\\\"></div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n                <mat-icon matTooltip=\\\"Reply\\\" (click)=\\\"answer(questions.id)\\\">reply</mat-icon>\\n                <mat-icon matTooltip=\\\"Like\\\">thumb_up_alt</mat-icon>\\n                <div> {{questions.like.length}}</div>\\n                <div *ngIf=\\\"checkRating(questions.rate)\\\">\\n                    <bar-rating matTooltip=\\\"Rate\\\" [(rate)]=\\\"rate\\\" [max]=\\\"5\\\" (rateChange)=\\\"rating(questions, $event)\\\"></bar-rating>\\n                </div>\\n                <div>{{averageRating(questions.rate)}}</div>\\n                <div>\\n                    <mat-icon *ngIf=\\\"open==true\\\" (click)=\\\"open=!open\\\">keyboard_arrow_down</mat-icon>\\n                    <mat-icon matTooltip=\\\"Hide {{viewReplies(questions)}} replies\\\" *ngIf=\\\"open==false\\\" (click)=\\\"open = !open\\\">keyboard_arrow_up</mat-icon>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"show==0 && cardId==card.id\\\">\\n                <div [froalaEditor] [(froalaModel)]=\\\"question\\\"></div>\\n                <div><button (click)=\\\"replying()\\\" mat-button>Reply</button> </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"replyShow && qID==questions.id\\\">\\n        <div fxLayout=\\\"row\\\">\\n            <div>\\n                <button [ngStyle]=\\\"{'background-image':'url('+image+card.user.imageUrl+')','background-size':'cover'}\\\" mat-mini-fab>\\n          </button>\\n            </div>\\n            <div fxFlex=80 fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n                <div [froalaEditor] [(froalaModel)]=\\\"editorContent\\\"></div>\\n                <div>\\n                    <button (click)=\\\"replyTo()\\\" mat-raised-button>Reply</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div style=\\\"margin-left: 50px\\\" *ngFor=\\\"let item of qA\\\">\\n        <div *ngIf=\\\"item.parentId==questions.id && open==false\\\">\\n            <div>\\n                <div fxLayout=\\\"row\\\">\\n                    <div>\\n                        <button [ngStyle]=\\\"{'background-image':'url('+image+card.user.imageUrl+')','background-size':'cover'}\\\" mat-mini-fab></button>\\n                    </div>\\n                    <div fxLayout=\\\"column\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\n                            <div>{{item.user.firstName}} {{item.user.lastName}}</div>\\n                            <div fxLayout=\\\"row \\\">{{item.modifiedDate | date:'medium'}}</div>\\n                        </div>\\n                        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                            <div [innerHTML]=\\\" item.message\\\"></div>\\n                            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n                                <div>\\n                                    <mat-icon matTooltip=\\\"Reply\\\" (click)=\\\"answer(item.id)\\\">reply</mat-icon>\\n                                </div>\\n                                <div fxLayout=\\\"row\\\">\\n                                    <mat-icon matTooltip=\\\"Like\\\" (click)=\\\"like(item)\\\">thumb_up_alt</mat-icon>\\n                                    <div> {{item.like.length}}</div>\\n                                </div>\\n                                <div *ngIf=\\\"checkRating(item.rate)\\\">\\n                                    <bar-rating matTooltip=\\\"Rate\\\" [max]=\\\"5\\\" [(rate)]=\\\"rate\\\" (rateChange)=\\\"rating(item, $event)\\\">\\n                                    </bar-rating>\\n                                </div>\\n                                <div>{{averageRating(item.rate)}}</div>\\n                                <div>\\n                                    <mat-icon matTooltip=\\\" View {{viewReplies(item)}} replies\\\" *ngIf=\\\"down==true\\\" (click)=\\\"replyDown(item.id)\\\">keyboard_arrow_down</mat-icon>\\n                                    <mat-icon matTooltip=\\\" Hide {{viewReplies(item)}} replies\\\" *ngIf=\\\"down==false\\\" (click)=\\\"replyDown(item.id)\\\">keyboard_arrow_up</mat-icon>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"replyShow && qID==item.id\\\">\\n                    <div fxLayout=\\\"row\\\">\\n                        <div fxFlex.xs=20 fxFlex.sm=10 fxFlex.md:=10 fxFlex.lg=5 fxFlex.xl=5>\\n                            <button [ngStyle]=\\\"{'background-image':'url('+image+card.user.imageUrl+')','background-size':'cover'}\\\" mat-mini-fab>\\n                </button>\\n                        </div>\\n                        <div fxFlex=80 fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\n                            <div [froalaEditor]=\\\"options\\\" [(froalaModel)]=\\\"editorContent\\\"></div>\\n                            <div><button (click)=\\\"replyTo()\\\" mat-raised-button>Reply</button> </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div style=\\\"margin-left: 40px\\\">\\n            <div *ngFor=\\\"let item2 of qA\\\">\\n                <div *ngIf=\\\"item2.parentId==item.id && down==false &&  rID==item.id\\\">\\n                    <div>\\n                        <div fxLayout=\\\"row\\\">\\n                            <div>\\n                                <button [ngStyle]=\\\"{'background-image':'url('+image+card.user.imageUrl+')','background-size':'cover'}\\\" mat-mini-fab></button>\\n                            </div>\\n                            <div fxLayout=\\\"column\\\">\\n                                <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\n                                    <div>{{item2.user.firstName}} {{item2.user.lastName}}</div>\\n                                    <div fxLayout=\\\"row\\\">{{item2.modifiedDate|date:'medium'}}</div>\\n                                </div>\\n                                <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                                    <div [innerHTML]=\\\"item2.message\\\"></div>\\n                                    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n                                        <div>\\n                                            <mat-icon matTooltip=\\\"Reply\\\" (click)=\\\"answer(item.id)\\\">reply</mat-icon>\\n                                        </div>\\n                                        <div fxLayout=row>\\n                                            <mat-icon matTooltip=\\\"Like\\\" (click)=\\\"like(item2)\\\">thumb_up_alt</mat-icon>\\n                                            <div> {{item2.like.length}}</div>\\n                                        </div>\\n                                        <div *ngIf=\\\"checkRating(item2.rate)\\\">\\n                                            <bar-rating matTooltip=\\\"Rate\\\" [max]=\\\"5\\\" [(rate)]=\\\"rate\\\" (rateChange)=\\\"rating(item2, $event)\\\">\\n                                            </bar-rating>\\n                                        </div>\\n                                        <div>{{averageRating(item2.rate)}}</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".noteContent {\\n  margin-bottom: 20px; }\\n\\n.userName {\\n  margin-left: 5px; }\\n\\nquestionCard {\\n  padding-top: 90px; }\\n\\n.answerCard {\\n  margin-left: 5%;\\n  margin-right: 5%;\\n  margin-top: 5%; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NoteService } from '../../service/note/note.service';\nimport { Model } from '../../Models/model.model';\nimport { environment } from 'src/environments/environment';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-question-answer',\n  templateUrl: './question-answer.component.html',\n  styleUrls: ['./question-answer.component.scss']\n})\nexport class QuestionAnswerComponent implements OnInit {\n  card = new Model();\n  private qID;\n  replyShow:boolean=false;\n  image;\n  private open = true;\n  show\n  rate = 2\n  cardId: any\n  question: string = '';\n  sub\n  questions\n  replyCount;\n  private down = true;\n  private rID;\n  public editorContent: string ;\n  qA;\n  constructor(private _location: Location,private routes: ActivatedRoute, public router: Router, public noteService: NoteService) { }\n\n  ngOnInit() {\n    this.sub = this.routes.params.subscribe(params => {\n      this.cardId = params['cardId'];\n    });\n    this.noteService.getNoteDetails(this.cardId).subscribe(result => {\n      this.card = result['data']['data'][0];\n      this.qA = result['data']['data'][0].questionAndAnswerNotes;\n      console.log(this.card);\n      console.log(this.card.questionAndAnswerNotes.length);\n      this.show = result['data']['data'][0].questionAndAnswerNotes.length;\n      if (this.show) {\n        this.questions = result['data']['data'][0].questionAndAnswerNotes[0];\n      }\n    })\n    this.image = environment.profileUrl;\n  }\n  close() {\n    this._location.back();\n  }\n  addQuestion() {\n    if (this.question != '') {\n      console.log(this.question)\n      this.show = !this.show;\n      let body = {\n        \"message\": this.question,\n        \"notesId\": this.cardId\n      }\n      this.noteService.addQuestionAndAnswer(body).subscribe(result => {\n        console.log(result);\n      })\n    }\n  }\n  viewReplies(questAns) {\n    this.replyCount = 0;\n    for (let i = 0; i < this.qA.length; i++) {\n      if (questAns.id == this.qA[i].parentId) {\n        this.replyCount++\n      }\n    }\n    return this.replyCount;\n  }\n  rating(data, event) {\n\n    let reqBody = {\n      \"rate\": event\n    }\n    this.noteService.ratingQuestionAndAnswer(data.id, reqBody).subscribe(result => {\n      // this.getNote();\n      console.log(\"done\", +result);\n    })\n  }\n  averageRating(rateArray) {\n    // this.value = 0;\n    // if (rateArray.length != 0) {\n    //   for (let i = 0; i < rateArray.length; i++) {\n    //     this.value += rateArray[i].rate\n    //   }\n    //   this.avgRate = this.value / rateArray.length;\n    //   return this.avgRate.toFixed(1);\n    // }\n  }\n  checkRating(rateArray) {\n    this.rate = 0;\n    if (rateArray.length == 0) {\n      return true;\n    }\n    for (let i = 0; i < rateArray.length; i++) {\n      if (rateArray[i].userId == localStorage.getItem('userId')) {\n        this.rate = rateArray[i].rate;\n      }\n    }\n    return true;\n  }\n  replyTo() {\n    let replyRequest = {\n      \"message\": this.editorContent,\n    }\n    this.noteService.replyQuestionAndAnswer(this.qID, replyRequest).subscribe(response => {\n      // this.getNote();\n    })\n  }\n  replyDown(replyId) {\n    this.down = !this.down;\n    this.rID = replyId;\n  }\n  answer(id) {\n    this.replyShow = !this.replyShow;\n    this.qID = id;\n  }\n}\n","module.exports = \"<div class=\\\"main\\\">\\n    <mat-card class=\\\"card\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"100\\\">\\n        <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap.xs=\\\"0.1px\\\">\\n            <div class=\\\"logo\\\" fxLayoutAlign=\\\"center center\\\">\\n                <img mat-card-image fxFlex=\\\"50\\\" src=\\\"https://upload.wikimedia.org/wikipedia/commons/d/df/Google_Keep_icon.svg\\\">\\n            </div>\\n            <mat-label id=\\\"registerPage\\\">Sign Up</mat-label>\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center stretch\\\" fxLayoutGap=\\\"1px\\\">\\n                <div class=\\\"container\\\" fxLayoutAlign=\\\"center stretch\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"5px\\\" fxLayoutGap.xs=\\\"2px\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"50\\\">\\n                        <mat-label>First Name</mat-label>\\n                        <input matInput name=\\\"firstname\\\" [formControl]=\\\"firstname\\\" required>\\n                        <mat-error *ngIf=\\\"firstname.invalid\\\">{{getFirstnameErrorMessage()}}</mat-error>\\n                    </mat-form-field>\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"50\\\">\\n                        <mat-label>Last Name</mat-label>\\n                        <input matInput name=\\\"lastname\\\" [formControl]=\\\"lastname\\\" required>\\n                        <mat-error *ngIf=\\\"lastname.invalid\\\">{{getLastnameErrorMessage()}}</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"container\\\" fxLayoutAlign=\\\"start stretch\\\" fxLayoutGap.xs=\\\"2px\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\">\\n                        <mat-label>Email</mat-label>\\n                        <input matInput name=\\\"email\\\" [formControl]=\\\"email\\\" required>\\n                        <mat-error *ngIf=\\\"email.invalid\\\">{{getEmailErrorMessage()}}</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"container\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center stretch\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap.xs=\\\"2px\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"50\\\">\\n                        <mat-label>Password</mat-label>\\n                        <input matInput name=\\\"password\\\" [formControl]=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" required>\\n                        <mat-error *ngIf=\\\"password.invalid\\\">{{getPasswordErrorMessage()}}</mat-error>\\n\\n                    </mat-form-field>\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"50\\\">\\n                        <mat-label>Confirm Password</mat-label>\\n                        <input matInput name=\\\"confirmpassword\\\" [formControl]=\\\"confirmpassword\\\" [type]=\\\"hide ? 'password' : 'text'\\\" required>\\n                        <mat-icon class=\\\"visible\\\" matSuffix (click)=\\\"hide = !hide\\\">{{hide ?'visibility' : 'visibility_off'}}</mat-icon>\\n                        <mat-error *ngIf=\\\"confirmpassword.invalid\\\">{{matchPassword(password.value, confirmpassword.value)}}</mat-error>\\n                        <!-- <mat-error>{{matchPassword(password.value, confirmpassword.value)}}</mat-error> -->\\n                    </mat-form-field>\\n                </div>\\n            </mat-card-content>\\n            <mat-button-toggle-group fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"space-around center\\\">\\n                <mat-button-toggle fxFlex=\\\"49\\\">Advance</mat-button-toggle>\\n                <mat-button-toggle fxFlex=\\\"52\\\">Basic</mat-button-toggle>\\n            </mat-button-toggle-group>\\n            <mat-card-actions>\\n                <div id=\\\"signupButton\\\"><button mat-raised-button color=\\\"primary\\\" (click)=\\\"secureRegister()\\\">Sign Up</button></div>\\n            </mat-card-actions>\\n            <mat-card-actions>\\n                <div>Already a User</div>\\n                <div id=\\\"loginLink\\\" fxLayoutAlign=\\\"center center\\\"><a routerLink=\\\".\\\" (click)=\\\"login()\\\">Log In</a></div>\\n            </mat-card-actions>\\n        </mat-card>\\n    </mat-card>\\n</div>\"","module.exports = \"#registerPage {\\n  font-size: 25px; }\\n\\n/* You can add global styles to this file, and also import other style files */\\n\\n.visible {\\n  cursor: pointer; }\\n\\n.main {\\n  background: #d1d1d1;\\n  height: 100%; }\\n\\n.card {\\n  height: 100vh;\\n  min-height: 640px;\\n  min-width: 360px; }\\n\\nhtml, body {\\n  height: 100%; }\\n\\nbody {\\n  margin: 0;\\n  font-family: 'Roboto', sans-serif; }\\n\\n.visible {\\n  cursor: pointer; }\\n\\n.main {\\n  background: #d1d1d1;\\n  height: 100%; }\\n\\n.card {\\n  height: 100vh;\\n  min-height: 640px;\\n  min-width: 360px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { HttpService } from 'src/app/service/http/http.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    public hide = true;\n    public firstname = new FormControl('',[Validators.required])\n    public lastname = new FormControl('',[Validators.required])\n    public email = new FormControl('', [Validators.required, Validators.email]);\n    public password = new FormControl('', [Validators.required, Validators.minLength(8)])\n    public confirmpassword = new FormControl('', [Validators.required, Validators.minLength(8)])\n    constructor(private router: Router,  private service : HttpService, public snackBar: MatSnackBar) { \n        if(localStorage.getItem(\"userToken\")!=null){\n            this.router.navigate([''])\n        }\n    }\n    ngOnInit() {\n        console.log(this.router)\n    }\n    getFirstnameErrorMessage(): String {\n        return this.firstname.hasError('required') ? \"You must enter First Name\":''\n    }\n    getLastnameErrorMessage(): String {\n        return this.lastname.hasError('required') ? \"You must enter Last Name\":''\n    }\n    getEmailErrorMessage(): String {\n        return this.email.hasError('required') ?\n            'You must enter email' : this.email.hasError('email') ? 'Not a Valid Email' : ''\n    }\n    getPasswordErrorMessage(): String {\n        return this.password.hasError('required') ?\n            'You must enter password' : this.password.hasError('minlength') ? 'Wrong password' : ''\n    }\n    getConfirmPasswordErrorMessage(): String {\n        console.log(this.confirmpassword)\n        if(this.confirmpassword.hasError('required')){\n            return \"You must enter the confirm password\"\n        }\n        else if(this.confirmpassword.hasError('minlength')){\n            return 'password at least 8 letters '\n        }\n        else if(this.confirmpassword != this.password){\n            \n        }\n    }\n    login() {\n        console.log('fff',this.firstname.value)\n        this.router.navigate(['login'])\n    }\n    forgot() {\n        this.router.navigate(['forgot'])\n    }\n    matchPassword(password, confirmpassword){\n        if(password!=confirmpassword){\n            return \"password not matched\"\n        }\n        if(password==confirmpassword){\n            return \"password matched\"\n        }\n    }\n    secureRegister(){\n        if(this.confirmpassword.value == this.password.value && this.firstname!=null && this.lastname != null && this.email != null && this.password != null){\n            var user = {\n                \"firstName\" : this.firstname.value,\n                \"lastName\" : this.lastname.value,\n                \"service\" : \"advance\", \n                \"email\" : this.email.value,\n                \"password\" : this.password.value\n            }\n            console.log(user);\n            this.service.postRequest('user/userSignUp', user).subscribe((data:any)=>{\n                console.log('data==========',data)\n                if(data.data.success==true){\n                    console.log(\"inside\")\n                    this.snackBar.open(\"User Registerd\", \"Okay\");\n                    this.router.navigate(['login'])\n                }\n            })\n        }\n        else{\n            this.router.navigate['register']\n        }\n    }\n}\n","module.exports = \"<div *ngIf=\\\"remindershow\\\" fxflex=\\\"100\\\">\\n    <div *ngFor=\\\"let remind of remindList\\\">\\n        <div fxLayoutAlign=\\\"space-around center\\\">\\n            <button mat-menu-item (click)=\\\"reminder(remind.daycount,remind.timeCount)\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n          <div>{{remind.day}}</div>\\n          <div fxFlexOffset='20'>{{remind[\\\"time\\\"]}}</div>\\n        </div>\\n      </button>\\n        </div>\\n    </div>\\n    <div>\\n        <button overlapTrigger=\\\"true\\\" mat-menu-item (click)=\\\"toggle()\\\" (click)=\\\"$event.stopPropagation()\\\">\\n      <div fxLayout=\\\"row\\\">\\n        <div fxLayoutAlign=\\\"space-around center\\\" class=\\\"material-icons\\\">schedule</div>\\n        <div fxFlexOffset='8'>Pick date & time</div>\\n      </div>\\n    </button>\\n    </div>\\n</div>\\n<div *ngIf=\\\"!remindershow\\\" fxflex=\\\"100\\\" fxLayout=\\\"column\\\">\\n    <div>\\n        <button overlapTrigger=\\\"true\\\" mat-menu-item>\\n      <div fxLayout=\\\"row\\\" (click)=\\\"$event.stopPropagation()\\\">\\n        <div fxLayoutAlign=\\\"space-around center\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"toggle()\\\"\\n          class=\\\"material-icons\\\">arrow_back</div>\\n        <div fxFlexOffset='8'>Pick date & time</div>\\n      </div>\\n    </button>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [min]=\\\"todaydate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"checker\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\n                <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\n            </mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" (click)=\\\"$event.stopPropagation()\\\">\\n        <mat-form-field>\\n            <mat-label>Add a Time</mat-label>\\n            <mat-select [(value)]=\\\"selected\\\">\\n                <mat-option *ngFor=\\\"let remind of customList\\\" value=remind.value>\\n                    <div>\\n                        <button mat-menu-item (click)=\\\"customReminder(remind.timeCount)\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                <div>{{remind.timeZone}} </div>\\n                <div fxFlexOffset='18'>{{remind.time}}</div>\\n              </div>\\n            </button>\\n                    </div>\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n    </div>\\n    <div fxLayout=\\\"row\\\">\\n        <div fxFlex=\\\"90\\\" fxLayoutAlign=\\\"end end\\\">\\n            <button mat-button (click)=\\\"saveReminder()\\\">\\n        Save\\n      </button>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"::ng-deep .mat-menu-panel {\\n  min-width: 220px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NoteService } from '../../service/note/note.service';\n\n@Component({\n  selector: 'app-reminder-icon',\n  templateUrl: './reminder-icon.component.html',\n  styleUrls: ['./reminder-icon.component.scss']\n})\nexport class ReminderIconComponent implements OnInit {\n  remindershow: boolean = true;\n  @Input() card;\n  changed: boolean;\n  todaydate: Date = new Date();\n  dayCount = 0;\n  checker: Date = new Date();\n  model\n  remindList = [\n    { day: 'today', time: '9:00PM', daycount: 0, timeCount: 20 },\n    { day: 'tommorow', time: '9:00AM', daycount: 1, timeCount: 8 },\n    { day: 'Next Week', time: '9:00AM', daycount: 7, timeCount: 8 },\n  ]\n  customList = [\n    { value: 'option1', timeZone: 'Morning', time: '9:00AM', timeCount: 8 },\n    { value: 'option2', timeZone: 'Afternoon', time: '1:00PM', timeCount: 13 },\n    { value: \"option3\", timeZone: 'Evening', time: '6:00PM', timeCount: 18 },\n    { value: \"option4\", timeZone: 'Night', time: '9:00PM', timeCount: 20 },\n  ]\n  private currentDate = new Date();\n  constructor(public noteService: NoteService) { }\n  ngOnInit() {\n  }\n  toggle() {\n    this.remindershow = !this.remindershow;\n  }\n  reminder(dayCount, timeCount) {\n    console.log(this.model);\n    this.changed = true;\n    this.model = {\n      \"noteIdList\": [this.card.id],\n      \"reminder\": new Date(this.currentDate.getFullYear(), this.currentDate.getMonth(),\n        this.currentDate.getDate() + dayCount, timeCount, 0, 0, 0)\n    }\n    if (this.card.id == undefined) {\n      this.card.reminder[0] = this.model.reminder;\n    } else {\n      this.saveReminder();\n\n    }\n  }\n\n  customReminder(timeCount) {\n    this.changed = true;\n    this.checker.setHours(timeCount, 0, 0);\n    this.model = {\n      \"noteIdList\": [this.card.id],\n      \"reminder\": this.checker\n    }\n  }\n  saveReminder() {\n    if (this.changed) {\n      console.log(this.model, \"model\")\n      if (this.card.id == undefined) {\n        this.card.reminder[0] = this.model.reminder;\n      }\n      else {\n        this.noteService.addUpdateReminderNote(this.model).subscribe(response => {\n          // this.remindEvent.emit();\n          console.log(response, \"responce\");\n          this.card.reminder[0] = this.model.reminder;\n        })\n      }\n    }\n  }\n}\n","module.exports = \"<app-display-notes [notes]=\\\"reminderNotes\\\"></app-display-notes>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NoteService } from '../../service/note/note.service';\n@Component({\n  selector: 'app-reminders',\n  templateUrl: './reminders.component.html',\n  styleUrls: ['./reminders.component.scss']\n})\nexport class RemindersComponent implements OnInit {\n\n  constructor(public noteService: NoteService) { }\n  reminderNotes\n  ngOnInit() {\n    this.getReminder();\n  }\n  getReminder() {\n    this.noteService.getReminderNotes().subscribe(data => {\n      this.reminderNotes = data['data']['data']\n    })\n  }\n}\n","module.exports = \"<div class=\\\"main\\\">\\n    <mat-card class=\\\"card\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"100\\\" fxLayoutGap=\\\"1px\\\">\\n        <div class=\\\"logo\\\" fxLayoutAlign=\\\"center center\\\">\\n            <img mat-card-image fxFlex='50' src=\\\"https://upload.wikimedia.org/wikipedia/commons/d/df/Google_Keep_icon.svg\\\">\\n        </div>\\n        <mat-label id=\\\"loginPage\\\">Reset</mat-label>\\n        <mat-card-content fxLayout=\\\"column\\\">\\n            <div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center stretch\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"5px\\\">\\n                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"50\\\">\\n                    <mat-label>Password</mat-label>\\n                    <input matInput name=\\\"password\\\" [formControl]=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" required>\\n                    <mat-error *ngIf=\\\"password.invalid\\\">{{getPasswordErrorMessage()}}</mat-error>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"50\\\">\\n                    <mat-label>Confirm Password</mat-label>\\n                    <input matInput name=\\\"confirmpassword\\\" [formControl]=\\\"confirmpassword\\\" [type]=\\\"hide ? 'password' : 'text'\\\" required>\\n                    <mat-icon class = \\\"visible\\\" matSuffix (click)=\\\"hide = !hide\\\">{{hide ?'visibility' : 'visibility_off'}}</mat-icon>\\n                    <mat-error *ngIf=\\\"confirmpassword.invalid\\\">{{getPasswordErrorMessage()}}</mat-error>\\n                </mat-form-field>\\n            </div>\\n        </mat-card-content>\\n        <mat-card-actions >\\n            <button mat-raised-button color=\\\"primary\\\" (click) = \\\"reset()\\\">Reset</button>\\n        </mat-card-actions>\\n    </mat-card>\\n</div>\\n\\n\"","module.exports = \"#loginPage {\\n  font-size: 25px; }\\n\\n/* You can add global styles to this file, and also import other style files */\\n\\n.visible {\\n  cursor: pointer; }\\n\\n.main {\\n  background: #d1d1d1;\\n  height: 100%; }\\n\\n.card {\\n  height: 100vh;\\n  min-height: 640px;\\n  min-width: 360px; }\\n\\nhtml, body {\\n  height: 100%; }\\n\\nbody {\\n  margin: 0;\\n  font-family: 'Roboto', sans-serif; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms'\nimport { Router, ActivatedRoute} from '@angular/router'\nimport { HttpService } from '../../service/http/http.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: './reset-password.component.html',\n    styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n    public hide = true;\n    public password = new FormControl('', [Validators.required, Validators.minLength(8)])\n    public confirmpassword = new FormControl('', [Validators.required, Validators.minLength(8)])\n    constructor(private router: Router,\n    private service: HttpService, private activeRoute : ActivatedRoute, public snackBar: MatSnackBar) { \n        if(localStorage.getItem(\"userToken\")!=null){\n            this.router.navigate([''])\n        }\n    }\n    accessToken = this.activeRoute.snapshot.paramMap.get('token')\n    ngOnInit() {\n        console.log(this.router)\n        console.log(this.service)   \n        localStorage.setItem('token', this.accessToken)\n    }\n    getPasswordErrorMessage(): String {\n        return this.password.hasError('required') ?\n            'You must enter password' : this.password.hasError('minlength') ? 'Wrong password' : ''\n    }\n    getConPasswordErrorMessage(): String {\n        return this.confirmpassword.hasError('required') ?\n            'You must enter password' : this.confirmpassword.hasError('minlength') ? 'Wrong password' : ''\n    }\n    reset() {\n        if(this.confirmpassword!=null && this.password != null && this.confirmpassword.value==this.password.value){\n            var user = {\n                \"newPassword\": this.password.value\n            }\n            console.log(user);\n            \n            this.service.postUrlEncoded('user/reset-password', user).subscribe((data: any) => {\n                console.log('resolve',data);\n                this.router.navigate(['login'])\n            }, (error:any)=>{\n                console.log('error',error);\n                this.snackBar.open(\"Unknown error occurred\",\"try again\");\n                this.router.navigate(['forgot'])\n            }\n            )\n        }\n    }\n}\n","module.exports = \"<div>\\n  <app-display-notes class=\\\"container\\\" [notes]=\\\"cardData\\\" [search]=false></app-display-notes>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input, PipeTransform } from '@angular/core';\nimport { NoteService } from '../../service/note/note.service';\nimport { DataService } from '../../service/data/data.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  @Input() keyword;\n  cardData = [];\n  destroy: Subject<boolean> = new Subject<boolean>();\n  constructor(private noteService: NoteService, private dataService: DataService) { }\n  ngOnInit() {\n    this.getAllCard();\n  }\n  getAllCard() {\n    this.noteService.noteServiceGetData('notes/getNotesList').pipe(takeUntil(this.destroy))\n      .subscribe(data => {\n        this.cardData = [];\n        for (var i = data[\"data\"]['data'].length - 1; i >= 0; i--) {\n          if(data[\"data\"]['data'][i].isDeleted==false){\n            this.cardData.push(data[\"data\"]['data'][i])\n          }\n        }\n        console.log(\"Search cards\", this.cardData)\n      }, error => {\n        console.log(error);\n      })\n  }\n  ngOnDestroy() {\n    this.destroy.next(true);\n    this.destroy.unsubscribe();\n  }\n}","module.exports = \"<app-display-notes [notes]=\\\"cardData\\\"></app-display-notes>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NoteService } from '../../service/note/note.service'\n\n@Component({\n  selector: 'app-trash',\n  templateUrl: './trash.component.html',\n  styleUrls: ['./trash.component.scss']\n})\nexport class TrashComponent implements OnInit {\n  constructor(public noteService: NoteService) { }\n  cardData: any;\n  ngOnInit() {\n    this.getAllTrachCards();\n  }\n  getAllTrachCards() {\n    this.noteService.trashNotes().subscribe(data => {\n      this.cardData = data[\"data\"][\"data\"];\n      console.log(data);\n      return\n    })\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return value\n    }\n    if (value == '') {\n      return value\n    }\n    if (!args) {\n      return value\n    }\n    return value.filter(array =>\n      array.title.toLowerCase().indexOf(args.toLowerCase())!==-1 || array.description.toLowerCase().indexOf(args.toLowerCase()) !==-1 )\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Label } from '../../Models/model.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  labelDefault: Label = {\n    id: '',\n    label: '',\n    isDeleted: false,\n    userId: ''\n  }\n  private messageSource = new BehaviorSubject('searching');\n  public currentMessage = this.messageSource.asObservable();\n\n  private labelNotes = new BehaviorSubject<Label>(this.labelDefault);\n  public currentLabels = this.labelNotes.asObservable();\n\n  private view = new BehaviorSubject(true);\n  public currentView = this.view.asObservable();\n\n  private view1 = new BehaviorSubject(true);\n  public currentView1= this.view1.asObservable();\n\n  private changephoto = new BehaviorSubject(true);\n  currentPhoto = this.changephoto.asObservable();\n\n  constructor() { }\n  changeMessage(message: string) {\n    this.messageSource.next(message)\n  }\n  updateLabels(message: Label) {\n    this.labelNotes.next(message)\n  }\n  changeView(message: boolean) {\n    this.view.next(message);\n  }\n  changeView1(message:any) {\n    this.view1.next(message);\n  }\n  changeImage(message: boolean) {\n    this.changephoto.next(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  public httpOptions;\n  constructor(private http: HttpClient) { }\n  API_URL = environment.baseUrl;\n  postRequest(url, user) {\n    let headers = new HttpHeaders({\n      'Accept': 'application/json',\n    });\n    console.log(\"service\");\n    return this.http.post(this.API_URL + url, user, { headers: headers });\n  }\n  encode(data) {\n    const formBody = [];\n    for (const property in data) {\n      const encodedKey = encodeURIComponent(property);\n      const encodedValue = encodeURIComponent(data[property]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n    return formBody.join('&');\n  }\n  postUrlEncoded(url, notes) {\n    console.log(\"In service\");\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': localStorage.getItem('userToken')\n      })\n    };\n    return this.http.post(this.API_URL + url, this.encode(notes), this.httpOptions);\n  }\n  httpGetData(url) {\n    let headers = new HttpHeaders({\n      'Accept': 'application/json',\n      'Authorization': localStorage.getItem('userToken')\n    });\n    return this.http.get(this.API_URL + url, { headers });\n  }\n  encodedPostForm(url: any, data: any) {\n    url = environment.baseUrl + url;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': localStorage.getItem('userToken')\n      })\n    }\n    return this.http.post(url, this.encode(data), httpOptions);\n  }\n  encodedPostFormDelete(url: any) {\n    url = environment.baseUrl + url;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': localStorage.getItem('userToken')\n      })\n    }\n    return this.http.delete(url, httpOptions);\n  }\n\n  postJSON(url: string, body: any): any {\n    url = environment.baseUrl + url;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('userToken')\n      })\n    }\n    return this.http.post(url, body, httpOptions)\n  }\n  postImage(url: string, body: any): any {\n    url = environment.baseUrl + url;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': localStorage.getItem('userToken')\n      })\n    }\n    console.log(localStorage.getItem('userToken'), \"token\")\n    return this.http.post(url, body, httpOptions)\n  }\n  // getConfig(url) {\n  //   return this.http.get(environment.baseUrl + url);\n  // }\n} \n","import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoteService {\n\n  constructor(private service: HttpService) { }\n  noteServiceEncoded(url, data) {\n    return this.service.postUrlEncoded(url, data)\n  }\n  noteServiceGetData(url) {\n    return this.service.httpGetData(url);\n  }\n  noteServiceEncodedPost(url, data) {\n    return this.service.encodedPostForm(url, data)\n  }\n  noteServiceJSON(url, data) {\n    return this.service.postJSON(url, data)\n  }\n  archiveNote(data) {\n    return this.service.postJSON('notes/archiveNotes', data)\n  }\n  archiveNotes() {\n    return this.service.httpGetData('notes/getArchiveNotesList')\n  }\n  trashNotes() {\n    return this.service.httpGetData('notes/getTrashNotesList')\n  }\n  unarchiveNote(data) {\n    return this.service.postJSON('notes/archiveNotes', data);\n  }\n  pinUnpinNote(data) {\n    return this.service.postJSON('notes/pinUnpinNotes', data);\n  }\n  noteLabel(data) {\n    return this.service.postJSON('/noteLabels', data);\n  }\n  getLabels() {\n    return this.service.httpGetData('noteLabels/getNoteLabelList');\n  }\n  deleteLabel(data) {\n    return this.service.encodedPostFormDelete('noteLabels/' + data + '/deleteNoteLabel')\n  }\n  addUpdateReminderNote(data) {\n    return this.service.postJSON('notes/addUpdateReminderNotes', data);\n  }\n  searchUserList(data) {\n    return this.service.postJSON('user/searchUserList', data)\n  }\n  updateLabel(labelId, RequestBody) {\n    return this.service.postJSON('/noteLabels/' + labelId + '/updateNoteLabel', RequestBody)\n  }\n  deleteReminder(body) {\n    return this.service.postJSON('notes/removeReminderNotes', body)\n  }\n  getReminderNotes() {\n    return this.service.httpGetData('notes/getReminderNotesList');\n  }\n  addLabelToNote(noteId, labelId, body) {\n    return this.service.postJSON('notes/' + noteId + '/addLabelToNotes/' + labelId + '/add', body)\n  }\n  getNotesListByLabel(labelName) {\n    return this.service.postJSON('notes/getNotesListByLabel/' + labelName, '');\n  }\n  removeLabelTags(id, labelId, body) {\n    return this.service.postJSON('/notes/' + id + '/addLabelToNotes/' + labelId + '/remove', body);\n  }\n  getNoteDetails(cardId) {\n    return this.service.httpGetData('notes/getNotesDetail/' + cardId);\n  }\n\n  // getServiceOfUser() {\n  //   return this.service.getConfig('user/service')\n  // }\n  uploadImage(data) {\n    console.log(\"in note service\", data);\n    \n    return this.service.postImage('user/uploadProfileImage', data)\n  }\n  addCollaborator(noteId, data) {\n    return this.service.postJSON('notes/' + noteId + '/AddcollaboratorsNotes', data)\n  }\n  removeCollaborator(noteId, collaboratorId) {\n    return this.service.encodedPostFormDelete('notes/' + noteId + '/removeCollaboratorsNotes/' + collaboratorId)\n  }\n  addQuestionAndAnswer(body) {\n    return this.service.postJSON('/questionAndAnswerNotes/addQuestionAndAnswer', body)\n  }\n  ratingQuestionAndAnswer(id, data) {\n    return this.service.postJSON('questionAndAnswerNotes/rate/' + id, data)\n  }\n  replyQuestionAndAnswer(noteId, data) {\n    return this.service.postJSON('questionAndAnswerNotes/reply/' + noteId, data)\n  }\n  likeQuestionAndAnswer(id, data) {\n    return this.service.postJSON('questionAndAnswerNotes/like/' + id, data)\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://fundoonotes.incubation.bridgelabz.com/api/',\n  profileUrl : 'http://fundoonotes.incubation.bridgelabz.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuardGuard implements CanActivate {\n  constructor(public router: Router) { }\n  canActivate(\n    path: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (!this.isAuthenticated()) {\n\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n  isAuthenticated(): boolean {\n    const token = localStorage.getItem('userToken');\n    if (token)\n      return true;\n    return false;\n  }\n}\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}